<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>数据结构-链表</title>
    <link href="/2024/12/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E9%93%BE%E8%A1%A8/"/>
    <url>/2024/12/22/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E9%93%BE%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>密码修改模块&amp;文件</title>
    <link href="/2024/12/20/%E5%AF%86%E7%A0%81%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97-%E6%96%87%E4%BB%B6/"/>
    <url>/2024/12/20/%E5%AF%86%E7%A0%81%E4%BF%AE%E6%94%B9%E6%A8%A1%E5%9D%97-%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>想着还有20天就放寒假了, 得赶紧把C语言的大作业赶完, 不过也快了. 就差密码修改模块和成绩管理模块了.</p><p>前几天粗略的了解过文件, 今天第一次使用文件. 得多试试.<br>也是经过半个小时的努力把密码修改模块1.0写出来了:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br>FILE *ppassword;<br>char password [20]= <span class="hljs-string">&quot;123456&quot;</span>;<br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br>    FILE *MARK = fopen(<span class="hljs-string">&quot;password.text&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>);<br><br><span class="hljs-keyword">if</span>(MARK == NULL)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;.&quot;</span>);<br>&#125; <br><span class="hljs-keyword">else</span><br>&#123;<br>fscanf(MARK,<span class="hljs-string">&quot;%s&quot;</span>,password); <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,password);<br>&#125; <br>ppassword = fopen(<span class="hljs-string">&quot;password.text&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,password);<br>scanf(<span class="hljs-string">&quot;%s&quot;</span>,password);<br>fflush(stdin);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,password);<br>fprintf(ppassword,<span class="hljs-string">&quot;%s&quot;</span>,password);<br> <span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>因为验证密码模块没有调用验证密码函数, 也就是直接把 password 数组定义出来了.<br>不然可以直接去文件里面拿 input 和 password 来进行对比.<br>可能会方便很多.</p><p>这个代码有一些问题, 比如用户比较调皮, 喜欢点开修改密码再直接点 “×” , 就不输入新密码, 那我文件都清空了, 你不写东西进去.<br>这不就出 BUG 了吗?</p><p>经过不懈的奋斗:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br>FILE *ppassword;<br>char password [20]= <span class="hljs-string">&quot;123456&quot;</span>;<br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br>    FILE *MARK = fopen(<span class="hljs-string">&quot;password.text&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>);<br><br><span class="hljs-keyword">if</span>(MARK == NULL)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;.&quot;</span>);<br>&#125; <br><span class="hljs-keyword">else</span><br>&#123;<br>fscanf(MARK,<span class="hljs-string">&quot;%s&quot;</span>,password);<br>&#125; <br>ppassword = fopen(<span class="hljs-string">&quot;password.text&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>);<br> <br>fprintf(ppassword,<span class="hljs-string">&quot;%s&quot;</span>,password);<br>fclose(ppassword);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,password);<br>scanf(<span class="hljs-string">&quot;%s&quot;</span>,password);<br>ppassword = fopen(<span class="hljs-string">&quot;password.text&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>); <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,password);<br>fflush(stdin);<br>fprintf(ppassword,<span class="hljs-string">&quot;%s&quot;</span>,password);<br><br> <span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>密码修改模块2.0横空出世!</p><p>然后分解代码放入主函数和 change 函数中, 运行之后发现可行.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br></pre></td><td class="code"><pre><code class="hljs bash">&gt;<br><span class="hljs-comment">#include&lt;string.h&gt;</span><br><span class="hljs-comment">#include&lt;stdlib.h&gt;</span><br><span class="hljs-comment">#include&lt;time.h&gt;</span><br><span class="hljs-comment">#include&lt;ctype.h&gt;</span><br><br><br>FILE *PassWord;<br>char true_mima[20] = <span class="hljs-string">&quot;123456&quot;</span>;<br><br><br>void Setting(char *game,char *score,char *computer,char *setting,char *set_mima);<br>void change(char *password);<br>//------------------------------定义新的数据类型,方便指针的声明. <br>typedef struct zhan                <br>&#123;<br>double data[100];<br>int top;<br>&#125;zhan;<br>//------------------------------------提示系统后面有的函数 <br>void CSH (zhan *s);<br>void push (zhan *s,double e);<br>double pop(zhan *s);<br>int iskong(zhan *s);<br>double computer (double num1,char ch,double num2);<br>int getBig(char ch);<br>double deal(char *expression);<br>void house_score(long long in_xuehao);<br><br>//------------------------------------------<br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br><br>FILE *MARK = fopen(<span class="hljs-string">&quot;PassWord.text&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>);<br><br><span class="hljs-keyword">if</span>(MARK == NULL)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;.&quot;</span>);<br>&#125; <br><span class="hljs-keyword">else</span><br>&#123;<br>fscanf(MARK,<span class="hljs-string">&quot;%s&quot;</span>,true_mima);<br>&#125; <br>PassWord = fopen(<span class="hljs-string">&quot;PassWord.text&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>);<br>fprintf(PassWord,<span class="hljs-string">&quot;%s&quot;</span>,true_mima);<br>fclose(PassWord);<br>//printf(<span class="hljs-string">&quot;声明:因系统制作组学艺不精!请保证每次输入后只按一次回车键!否则回车符堆积缓冲区会造成系统运行出错!\n&quot;</span>);<br>//printf(<span class="hljs-string">&quot;知悉后按下任意键运行系统.&quot;</span>);<br>//getchar();                            //程序运行到<br>//system(<span class="hljs-string">&quot;cls&quot;</span>);<br>//-----------------------获取时间的操作<br><br>time_t current_time = time(NULL);<br>struct tm* BJH = localtime(&amp;current_time);<br>int year = BJH-&gt;tm_year + 1900;               //BJH-&gt;tm_year  得到tm 结构体中1990年到现在经过了多少时间.<br>int month = BJH-&gt;tm_mon + 1;               // tm结构体中 mon 存储的月份只有 0 - 11,所以+1.<br>int day = BJH-&gt;tm_mday;<br>int hour = BJH-&gt;tm_hour;<br>int min = BJH-&gt;tm_min;<br>int sec = BJH-&gt;tm_sec;<br><br>//------------------------设置界面存储操作的变量.<br>char game = <span class="hljs-string">&#x27;1&#x27;</span>;<br>char score = <span class="hljs-string">&#x27;2&#x27;</span>;<br>char computer = <span class="hljs-string">&#x27;3&#x27;</span>;<br>char setting = <span class="hljs-string">&#x27;4&#x27;</span>;<br>char set_mima = <span class="hljs-string">&#x27;5&#x27;</span>;<br><br>//-----------------------比较重要的几个变量<br><br>char input;           //接收用户输入.<br><br>//---------------------------------------密码变量<br><br><br>char input_mima[20];<br>int mark_mima = 0;<br>int mark_cishu = 0;<br><br>//----------------------------------------------密码检测模块<br><br>YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == 3)<br>&#123;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入您的%d位数密码(您还剩%d次机会):&quot;</span>, strlen(true_mima), 3 - mark_cishu);<br>fgets(input_mima, strlen(true_mima) + 1, stdin);//fgets 会吃一个回车符,所以+1.<br>fflush(stdin);<br>//printf(<span class="hljs-string">&quot; % c&quot;</span>, input_mima[5]);<br>mark_mima = 0;<br><span class="hljs-keyword">for</span> (int i = 0; i &lt; strlen(true_mima); i++)<br>&#123;<br><span class="hljs-keyword">if</span> (true_mima[i] != input_mima[i])<br>&#123;<br>fflush(stdin); <br>mark_mima = 1;<br>mark_cishu++;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密码错误!&quot;</span>);<br>goto YXL;<br>&#125;<br>&#125;<br>//printf(<span class="hljs-string">&quot;%d,%d&quot;</span>, strlen(true_mima), strlen(input_mima));<br><span class="hljs-keyword">if</span> (mark_mima == 0 &amp;&amp; strlen(true_mima) == strlen(input_mima))<br>&#123;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;欢迎回来!\n(按下任意键进入...)&quot;</span>);<br>fflush(stdin);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br><br>//------------------------------------------------------------------------主界面<br><br><br>mark_dasktop:<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;//----------------------------------------------------------------------------------------------------\\\\\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||----------------------------------------------------------------------------------------------------||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;|| 小组成员:BJH.YXL                                                                                   ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c开始小游戏.                                                            ||\n&quot;</span>, game);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c进入查询成绩.                                                          ||\n&quot;</span>, score);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c使用计算机.                                                            ||\n&quot;</span>, computer);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c调整设置.                                                              ||\n&quot;</span>, setting);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c修改密码.                                                              ||\n&quot;</span>, set_mima);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                    %d/%d/%d/%d/%d||\n&quot;</span>, year, month, day, hour, min);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||----------------------------------------------------------------------------------------------------||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\\\\----------------------------------------------------------------------------------------------------//\n&quot;</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;执行操作(按下O关闭电脑):&quot;</span>);<br><br>//--------------------------------------指令输入以及错误指令预防<br>int mark_misinput = 0;<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;input);<br>fflush(stdin);<br><span class="hljs-keyword">while</span> (input != game &amp;&amp; input != score &amp;&amp; input != computer &amp;&amp; input != setting &amp;&amp; input != set_mima)<br>&#123;<br><br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>fflush(stdin); <br>mark_misinput++;<br><span class="hljs-keyword">if</span> (mark_misinput == 10)<br>&#123;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;非有效指令!如果想关闭电脑请按下O\n程序将在本次运行共计输入十次错误指令后自动结束运行!(当前错误次数:%d)\n&quot;</span>, mark_misinput);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;执行操作:&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;input);<br><span class="hljs-keyword">if</span> (input == <span class="hljs-string">&#x27;O&#x27;</span>)<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br>//------------------------------------------交派模块运行指令<br><br><span class="hljs-keyword">if</span> (input == game)<br>&#123;<br>goto mark_game;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == score)<br>&#123;<br>goto mark_score;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == computer)<br>&#123;<br>goto mark_computer;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == setting)<br>&#123;<br>goto mark_setting;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == set_mima)<br>&#123;<br>goto mark_set_mima;<br>&#125;<br><br>//---------------------------------------------游戏模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_game:<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;游戏\n&quot;</span>);<br>//----------------<br><br><br>srand((unsigned int)time(NULL));<br>int answer = (rand() % 100) + 1;<br>int i;<br>int a = 1;<br>int b = 100;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[1，100]的数字：&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br><span class="hljs-keyword">if</span> (i &lt; a || i&gt; b)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;不玩算了!&quot;</span>);<br>goto mark_dasktop;<br>&#125;<br><span class="hljs-keyword">while</span> (i != answer)<br>&#123;<br><br><span class="hljs-keyword">if</span> (i &gt; answer &amp;&amp; i &gt;= a &amp;&amp; i &lt;= b)<br>&#123;<br>b = i;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[%d，%d]的数字(输入区间以外数字返回桌面)：&quot;</span>, a, i);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br>fflush(stdin); <br><span class="hljs-keyword">if</span> (i == answer)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恭喜你，猜中啦！&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><br>goto mark_dasktop;<br><br><br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (i &lt; answer &amp;&amp; i &gt;= a &amp;&amp; i &lt;= b)<br>&#123;<br>a = i;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[%d，%d]的数字(输入区间以外数字返回桌面)：&quot;</span>, i, b);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br>fflush(stdin); <br><span class="hljs-keyword">if</span> (i == answer)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恭喜你，猜对啦!&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_dasktop;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_dasktop;<br><br>&#125;<br>&#125;<br>&#125;<br>//---------------------------------------------成绩模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_score:<br>house_score(123);<br><br>&#125;<br>//---------------------------------------------计算模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_computer:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入表达式:&quot;</span>);<br>char expression [100];<br>scanf(<span class="hljs-string">&quot;%s&quot;</span>,expression);<br>double result = deal(expression);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br><span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%s = %f&quot;</span>,expression,result);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_dasktop; <br>&#125;<br>//---------------------------------------------设置模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_setting:<br>Setting(&amp;game,&amp;score,&amp;computer,&amp;setting,&amp;set_mima);  <br>goto mark_dasktop; <br>&#125;<br>//---------------------------------------------密码模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_set_mima:<br>change(true_mima);<br>goto mark_dasktop;<br>&#125;<br><br><br><br>&#125;<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br>//--------------------------------------成绩查询模块 <br>void house_score(long long in_xuehao)<br>&#123;<br>struct instruction<br>&#123;<br>char xuehao[11];<br>char name[20];<br>int score;<br>&#125;;<br>struct instruction xuesheng[10] =<br>&#123;<br>&#123;<span class="hljs-string">&quot;2402060629&quot;</span>,<span class="hljs-string">&quot;BJH&quot;</span>,100&#125;,<br>&#123;<span class="hljs-string">&quot;2402061111&quot;</span>,<span class="hljs-string">&quot;YXL&quot;</span>,100&#125;,<br>&#123;<span class="hljs-string">&quot;2402060000&quot;</span>,<span class="hljs-string">&quot;Jack&quot;</span>,85&#125;,<br>&#123;<span class="hljs-string">&quot;2402060001&quot;</span>,<span class="hljs-string">&quot;Amy&quot;</span>,37&#125;,<br>&#123;<span class="hljs-string">&quot;2402060002&quot;</span>,<span class="hljs-string">&quot;Java&quot;</span>,0&#125;,<br>&#123;<span class="hljs-string">&quot;2402060003&quot;</span>,<span class="hljs-string">&quot;Python&quot;</span>,0&#125;,<br>&#123;<span class="hljs-string">&quot;2402050003&quot;</span>,<span class="hljs-string">&quot;Jeeny&quot;</span>,89&#125;,<br>&#123;<span class="hljs-string">&quot;2402060004&quot;</span>,<span class="hljs-string">&quot;pettter&quot;</span>,34&#125;,<br>&#123;<span class="hljs-string">&quot;2402060008&quot;</span>,<span class="hljs-string">&quot;mike&quot;</span>,99&#125;,<br>&#123;<span class="hljs-string">&quot;2402060009&quot;</span>,<span class="hljs-string">&quot;haha&quot;</span>,60&#125;<br>&#125;;<br>   <br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,xuesheng[0].xuehao);<br><br>&#125;<br>//============================================================计算机模块相关函数.<br><br>//--------------------------入栈函数<br><br>void push(zhan *s,double e) <br>&#123;<br>s-&gt;top ++;<br>s-&gt;data[s-&gt;top] = e;<br>&#125;<br><br>//----------------------------出栈函数<br><br>double pop(zhan *s)<br>&#123;<br>double num = s-&gt;data[s-&gt;top];<br>s-&gt;top --;<br><span class="hljs-built_in">return</span> num;<br>&#125;<br><br>//-------------------------------初始化栈函数 <br><br>void CSH (zhan *s)<br>&#123;<br>s-&gt;top = -1; <br>&#125;<br>//--------------------------------判断是否为空<br><br>int iskong(zhan *s)<br>&#123;<br><span class="hljs-built_in">return</span> s-&gt;top == -1; <br>&#125;<br><br><br> <br>//--------------------------------获取运算符优先级函数<br><br>int getBig(char ch)<br>&#123;<br><span class="hljs-keyword">if</span>(ch == <span class="hljs-string">&#x27;*&#x27;</span> || ch == <span class="hljs-string">&#x27;/&#x27;</span> || ch == <span class="hljs-string">&#x27;%&#x27;</span>)<br>&#123;<br><span class="hljs-built_in">return</span> 2;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">return</span> 1;<br>&#125;<br> <br>&#125;<br><br>//---------------------------------计算函数<br><br>double computer (double num1,char ch,double num2)<br>&#123;<br>switch (ch)<br>&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:<br><span class="hljs-built_in">return</span> num1 + num2;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;-&#x27;</span>:<br> <span class="hljs-built_in">return</span> num1 - num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span> :<br>    <span class="hljs-keyword">if</span>(num2 == 0)<br>    &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;除数不能为0!&quot;</span>);<br>    <span class="hljs-built_in">exit</span>(1);<br>&#125;<br>    <span class="hljs-built_in">return</span> num1 / num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span> :<br>    <span class="hljs-built_in">return</span> num1 * num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;%&#x27;</span> :<br>    <span class="hljs-built_in">return</span> (int)num1 % (int)num2;<br>    default:<br>    <span class="hljs-built_in">return</span> 0; <br>&#125;<br>&#125;<br><br>//--------------------------------字符串处理函数<br><br>double deal (char *expression)<br>&#123;<br>zhan numzhan;<br>zhan chzhan;<br>CSH(&amp;numzhan);<br>CSH(&amp;chzhan);<br><br>int i = 0;<br><span class="hljs-keyword">while</span>(i &lt; strlen(expression))<br>&#123;<br><br>  /*<span class="hljs-keyword">if</span>( expresstion[i] != <span class="hljs-string">&#x27;*&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;/&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;+&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;-&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;%&#x27;</span>)<br><br><span class="hljs-keyword">if</span>(expresstion[i] &lt; <span class="hljs-string">&#x27;0&#x27;</span> &amp;&amp; expresstion[i] &gt; <span class="hljs-string">&#x27;9&#x27;</span>)<br>&#123;<br>i++;<br>&#125;<br>  */<br>    <span class="hljs-keyword">if</span>(isdigit(expression[i]))<br>    &#123;<br>    double num = 0;<br>    <span class="hljs-keyword">while</span>(isdigit(expression[i]))<br>    &#123;<br>    num = num*10 + (expression[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br>    i++;<br>&#125;<br>push(&amp;numzhan,num);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(expression[i] == <span class="hljs-string">&#x27;(&#x27;</span>)<br>&#123;<br>push(&amp;chzhan,expression[i]);<br>i++;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(expression[i] == <span class="hljs-string">&#x27;)&#x27;</span>)<br>&#123;<br><span class="hljs-keyword">while</span>(!iskong(&amp;chzhan) &amp;&amp; chzhan.data[chzhan.top] != <span class="hljs-string">&#x27;(&#x27;</span>)<br>&#123;<br>double num2 = pop(&amp;numzhan);<br>double num1 = pop(&amp;numzhan);<br>char ch = pop(&amp;chzhan);<br>double result = computer(num1,ch,num2);<br>push(&amp;numzhan,result);<br>&#125;<br>pop(&amp;chzhan);<br>i++;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>char ch = expression[i];<br><span class="hljs-keyword">while</span>(!iskong(&amp;chzhan) &amp;&amp; getBig(ch) &lt;= getBig(chzhan.data[chzhan.top]) )<br>&#123;<br>double num2 = pop(&amp;numzhan);<br>double num1 = pop(&amp;numzhan);<br>char ch = pop(&amp;chzhan);<br>double result = computer(num1,ch,num2);<br>push(&amp;numzhan,result);<br>&#125;<br>push(&amp;chzhan,ch);<br>i++;<br>&#125;<br><br>&#125;<br><span class="hljs-keyword">while</span>( !iskong(&amp;chzhan))<br>&#123;<br>double num2 = pop(&amp;numzhan);<br>double num1 = pop(&amp;numzhan);<br>char ch = pop (&amp;chzhan);<br>double result = computer(num1,ch,num2);<br>push (&amp;numzhan,result); <br>&#125;<br><span class="hljs-built_in">return</span> numzhan.data[numzhan.top];<br>&#125;<br>//-----------------------------   改键位.<br>void Setting(char *game,char *score,char *computer,char *setting,char *set_mima)<br>&#123;<br>int mark; <br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br>mark_Setting: <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;输入1111回到主界面.\n&quot;</span>); <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请选择您要修改的键位(1-&gt;game,2-&gt;score,3-&gt;computer,4-&gt;setting,5-&gt;set_mima):&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>,&amp;mark);<br>fflush(stdin);<br><span class="hljs-keyword">if</span>(mark == 1)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您要将入口从%c修改为:&quot;</span>);<br>char mark ;<br> <br>scanf(<span class="hljs-string">&quot;%c&quot;</span>,&amp;mark);<br>fflush(stdin);<br><span class="hljs-keyword">if</span>(mark == *score || mark == *computer || mark == *setting || mark == *set_mima) <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;--------------------------------非法输入---------------------------------\n&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br>goto mark_Setting; <br>&#125;<br>*game = mark; <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;修改成功!&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_Setting; <br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mark == 2)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您要将入口从%c修改为:&quot;</span>);<br>char mark ;<br>fflush(stdin); <br>scanf(<span class="hljs-string">&quot;%c&quot;</span>,&amp;mark);<br>fflush(stdin);<br><span class="hljs-keyword">if</span>(mark == *game || mark == *computer || mark == *setting || mark == *set_mima) <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;--------------------------------非法输入---------------------------------\n&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br>goto mark_Setting; <br>&#125;<br>*score = mark; <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;修改成功!&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_Setting; <br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mark == 3)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您要将入口从%c修改为:&quot;</span>);<br>char mark ;<br>fflush(stdin); <br>scanf(<span class="hljs-string">&quot;%c&quot;</span>,&amp;mark);<br>fflush(stdin);<br><span class="hljs-keyword">if</span>(mark == *game || mark == *score || mark == *setting || mark == *set_mima) <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;--------------------------------非法输入---------------------------------\n&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br>goto mark_Setting; <br>&#125;<br>*computer = mark; <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;修改成功!&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_Setting; <br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mark == 4)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您要将入口从%c修改为:&quot;</span>);<br>char mark ;<br>fflush(stdin); <br>scanf(<span class="hljs-string">&quot;%c&quot;</span>,&amp;mark);<br>fflush(stdin);<br><span class="hljs-keyword">if</span>(mark == *game || mark == *computer || mark == *score || mark == *set_mima) <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;--------------------------------非法输入---------------------------------\n&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br>goto mark_Setting; <br>&#125;<br>*setting = mark; <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;修改成功!&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_Setting; <br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mark == 5)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您要将入口从%c修改为:&quot;</span>);<br>char mark ;<br>fflush(stdin); <br>scanf(<span class="hljs-string">&quot;%c&quot;</span>,&amp;mark);<br>fflush(stdin);<br><span class="hljs-keyword">if</span>(mark == *game || mark == *computer || mark == *setting || mark == *score) <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;--------------------------------非法输入---------------------------------\n&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br>goto mark_Setting; <br>&#125;<br>*set_mima = mark; <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;修改成功!&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_Setting; <br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mark == 1111)<br>&#123;<br>fflush(stdin);<br>system(<span class="hljs-string">&quot;cls&quot;</span>) ;<br><span class="hljs-built_in">return</span>; <br>&#125; <br>  <br>&#125; <br><br>void change(char *password)<br>&#123;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>char newword[20];<br>char input_mima[20];<br>int mark_cishu = 0; <br>int mark_mima = 0;<br>YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == 3)<br>&#123;<br><span class="hljs-built_in">return</span> ;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入您的%d位数旧密码(您还剩%d次机会):&quot;</span>, strlen(password), 3 - mark_cishu);<br>fflush(stdin);<br>fgets(input_mima, strlen(password) + 1, stdin);<br>fflush(stdin);//fgets 会吃一个回车符,所以+1.<br>//printf(<span class="hljs-string">&quot; % c&quot;</span>, input_mima[5]);<br>mark_mima = 0;<br><span class="hljs-keyword">for</span> (int i = 0; i &lt; strlen(password); i++)<br>&#123;<br><span class="hljs-keyword">if</span> (password[i] != input_mima[i])<br>&#123;<br>fflush(stdin); <br>mark_mima = 1;<br>mark_cishu++;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密码错误!&quot;</span>);<br>goto YXL;<br>&#125;<br>&#125;<br>//printf(<span class="hljs-string">&quot;%d,%d&quot;</span>, strlen(true_mima), strlen(input_mima));<br><span class="hljs-keyword">if</span> (mark_mima == 0 &amp;&amp; strlen(password) == strlen(input_mima))<br>&#123;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入您的新密码:&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%s&quot;</span>,password);<br>    PassWord = fopen(<span class="hljs-string">&quot;password.text&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>); <br>    fflush(stdin);<br>    fprintf(PassWord,<span class="hljs-string">&quot;%s&quot;</span>,password); <br>    fclose(PassWord);<br>fflush(stdin);<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br><span class="hljs-built_in">return</span> ;<br>    &#125;<br>&#125; <br></code></pre></td></tr></table></figure><p>嗯, 很成功. 密码模块只用了一个半小时一遍过.</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言</tag>
      
      <tag>大作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大作业-4</title>
    <link href="/2024/12/19/%E5%A4%A7%E4%BD%9C%E4%B8%9A%E8%BF%9B%E5%BA%A6-4/"/>
    <url>/2024/12/19/%E5%A4%A7%E4%BD%9C%E4%B8%9A%E8%BF%9B%E5%BA%A6-4/</url>
    
    <content type="html"><![CDATA[<p>今天下午参加同学聚会, 嗯内容下次补上,时间不多了.</p><p>今天大作业更新了 setting 模块, 这个没啥技术含量, 纯 Ctrl c , Ctrl v.<br>然后就是把所有的 getchar(); 换成了 system(“pause”);<br>还引入了今天新学的清空缓冲区数据的函数 fflush( );</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#define _CRT_SECURE_NO_WARNINGS</span><br><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br><span class="hljs-comment">#include&lt;string.h&gt;</span><br><span class="hljs-comment">#include&lt;stdlib.h&gt;</span><br><span class="hljs-comment">#include&lt;time.h&gt;</span><br><span class="hljs-comment">#include&lt;ctype.h&gt;</span><br><br>void Setting(char *game,char *score,char *computer,char *setting,char *set_mima);<br>//------------------------------定义新的数据类型,方便指针的声明. <br>typedef struct zhan                <br>&#123;<br>double data[100];<br>int top;<br>&#125;zhan;<br>//------------------------------------提示系统后面有的函数 <br>void CSH (zhan *s);<br>void push (zhan *s,double e);<br>double pop(zhan *s);<br>int iskong(zhan *s);<br>double computer (double num1,char ch,double num2);<br>int getBig(char ch);<br>double deal(char *expression);<br>void house_score(long long in_xuehao);<br><br>//------------------------------------------<br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br>//printf(<span class="hljs-string">&quot;声明:因系统制作组学艺不精!请保证每次输入后只按一次回车键!否则回车符堆积缓冲区会造成系统运行出错!\n&quot;</span>);<br>//printf(<span class="hljs-string">&quot;知悉后按下任意键运行系统.&quot;</span>);<br>//getchar();                            //程序运行到<br>//system(<span class="hljs-string">&quot;cls&quot;</span>);<br>//-----------------------获取时间的操作<br><br>time_t current_time = time(NULL);<br>struct tm* BJH = localtime(&amp;current_time);<br>int year = BJH-&gt;tm_year + 1900;               //BJH-&gt;tm_year  得到tm 结构体中1990年到现在经过了多少时间.<br>int month = BJH-&gt;tm_mon + 1;               // tm结构体中 mon 存储的月份只有 0 - 11,所以+1.<br>int day = BJH-&gt;tm_mday;<br>int hour = BJH-&gt;tm_hour;<br>int min = BJH-&gt;tm_min;<br>int sec = BJH-&gt;tm_sec;<br><br>//------------------------设置界面存储操作的变量.<br>char game = <span class="hljs-string">&#x27;1&#x27;</span>;<br>char score = <span class="hljs-string">&#x27;2&#x27;</span>;<br>char computer = <span class="hljs-string">&#x27;3&#x27;</span>;<br>char setting = <span class="hljs-string">&#x27;4&#x27;</span>;<br>char set_mima = <span class="hljs-string">&#x27;5&#x27;</span>;<br><br>//-----------------------比较重要的几个变量<br><br>char input;           //接收用户输入.<br><br>//---------------------------------------密码变量<br><br>char true_mima[20] = <span class="hljs-string">&quot;123456&quot;</span>;<br>char input_mima[20];<br>int mark_mima = 0;<br>int mark_cishu = 0;<br><br>//----------------------------------------------密码检测模块<br><br>YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == 3)<br>&#123;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入您的%d位数密码(您还剩%d次机会):&quot;</span>, strlen(true_mima), 3 - mark_cishu);<br>fgets(input_mima, strlen(true_mima) + 1, stdin);//fgets 会吃一个回车符,所以+1.<br>//printf(<span class="hljs-string">&quot; % c&quot;</span>, input_mima[5]);<br>mark_mima = 0;<br><span class="hljs-keyword">for</span> (int i = 0; i &lt; strlen(true_mima); i++)<br>&#123;<br><span class="hljs-keyword">if</span> (true_mima[i] != input_mima[i])<br>&#123;<br>fflush(stdin); <br>mark_mima = 1;<br>mark_cishu++;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密码错误!&quot;</span>);<br>goto YXL;<br>&#125;<br>&#125;<br>//printf(<span class="hljs-string">&quot;%d,%d&quot;</span>, strlen(true_mima), strlen(input_mima));<br><span class="hljs-keyword">if</span> (mark_mima == 0 &amp;&amp; strlen(true_mima) == strlen(input_mima))<br>&#123;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;欢迎回来!\n(按下任意键进入...)&quot;</span>);<br>fflush(stdin);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br><br>//------------------------------------------------------------------------主界面<br><br><br>mark_dasktop:<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;//----------------------------------------------------------------------------------------------------\\\\\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||----------------------------------------------------------------------------------------------------||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;|| 小组成员:BJH.YXL                                                                                   ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c开始小游戏.                                                            ||\n&quot;</span>, game);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c进入查询成绩.                                                          ||\n&quot;</span>, score);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c使用计算机.                                                            ||\n&quot;</span>, computer);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c调整设置.                                                              ||\n&quot;</span>, setting);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c修改密码.                                                              ||\n&quot;</span>, set_mima);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                    %d/%d/%d/%d/%d||\n&quot;</span>, year, month, day, hour, min);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||----------------------------------------------------------------------------------------------------||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\\\\----------------------------------------------------------------------------------------------------//\n&quot;</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;执行操作(按下O关闭电脑):&quot;</span>);<br><br>//--------------------------------------指令输入以及错误指令预防<br>int mark_misinput = 0;<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;input);<br><span class="hljs-keyword">while</span> (input != game &amp;&amp; input != score &amp;&amp; input != computer &amp;&amp; input != setting &amp;&amp; input != set_mima)<br>&#123;<br><br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>fflush(stdin); <br>mark_misinput++;<br><span class="hljs-keyword">if</span> (mark_misinput == 10)<br>&#123;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;非有效指令!如果想关闭电脑请按下O\n程序将在本次运行共计输入十次错误指令后自动结束运行!(当前错误次数:%d)\n&quot;</span>, mark_misinput);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;执行操作:&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;input);<br><span class="hljs-keyword">if</span> (input == <span class="hljs-string">&#x27;O&#x27;</span>)<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br>//------------------------------------------交派模块运行指令<br><br><span class="hljs-keyword">if</span> (input == game)<br>&#123;<br>goto mark_game;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == score)<br>&#123;<br>goto mark_score;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == computer)<br>&#123;<br>goto mark_computer;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == setting)<br>&#123;<br>goto mark_setting;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == set_mima)<br>&#123;<br>goto mark_set_mima;<br>&#125;<br><br>//---------------------------------------------游戏模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_game:<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;游戏\n&quot;</span>);<br>//----------------<br><br><br>srand((unsigned int)time(NULL));<br>int answer = (rand() % 100) + 1;<br>int i;<br>int a = 1;<br>int b = 100;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[1，100]的数字：&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br><span class="hljs-keyword">if</span> (i &lt; a || i&gt; b)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;不玩算了!&quot;</span>);<br>goto mark_dasktop;<br>&#125;<br><span class="hljs-keyword">while</span> (i != answer)<br>&#123;<br><br><span class="hljs-keyword">if</span> (i &gt; answer &amp;&amp; i &gt;= a &amp;&amp; i &lt;= b)<br>&#123;<br>b = i;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[%d，%d]的数字(输入区间以外数字返回桌面)：&quot;</span>, a, i);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br>fflush(stdin); <br><span class="hljs-keyword">if</span> (i == answer)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恭喜你，猜中啦！&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><br>goto mark_dasktop;<br><br><br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (i &lt; answer &amp;&amp; i &gt;= a &amp;&amp; i &lt;= b)<br>&#123;<br>a = i;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[%d，%d]的数字(输入区间以外数字返回桌面)：&quot;</span>, i, b);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br>fflush(stdin); <br><span class="hljs-keyword">if</span> (i == answer)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恭喜你，猜对啦!&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_dasktop;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_dasktop;<br><br>&#125;<br>&#125;<br>&#125;<br>//---------------------------------------------成绩模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_score:<br>house_score(123);<br><br>&#125;<br>//---------------------------------------------计算模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_computer:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入表达式:&quot;</span>);<br>char expression [100];<br>scanf(<span class="hljs-string">&quot;%s&quot;</span>,expression);<br>double result = deal(expression);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br><span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%s = %f&quot;</span>,expression,result);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_dasktop; <br>&#125;<br>//---------------------------------------------设置模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_setting:<br>Setting(&amp;game,&amp;score,&amp;computer,&amp;setting,&amp;set_mima);  <br>goto mark_dasktop; <br>&#125;<br>//---------------------------------------------密码模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_set_mima:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密码&quot;</span>);<br>&#125;<br><br><br><br>&#125;<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br>//--------------------------------------成绩查询模块 <br>void house_score(long long in_xuehao)<br>&#123;<br>struct instruction<br>&#123;<br>char xuehao[11];<br>char name[20];<br>int score;<br>&#125;;<br>struct instruction xuesheng[10] =<br>&#123;<br>&#123;<span class="hljs-string">&quot;2402060629&quot;</span>,<span class="hljs-string">&quot;BJH&quot;</span>,100&#125;,<br>&#123;<span class="hljs-string">&quot;2402061111&quot;</span>,<span class="hljs-string">&quot;YXL&quot;</span>,100&#125;,<br>&#123;<span class="hljs-string">&quot;2402060000&quot;</span>,<span class="hljs-string">&quot;Jack&quot;</span>,85&#125;,<br>&#123;<span class="hljs-string">&quot;2402060001&quot;</span>,<span class="hljs-string">&quot;Amy&quot;</span>,37&#125;,<br>&#123;<span class="hljs-string">&quot;2402060002&quot;</span>,<span class="hljs-string">&quot;Java&quot;</span>,0&#125;,<br>&#123;<span class="hljs-string">&quot;2402060003&quot;</span>,<span class="hljs-string">&quot;Python&quot;</span>,0&#125;,<br>&#123;<span class="hljs-string">&quot;2402050003&quot;</span>,<span class="hljs-string">&quot;Jeeny&quot;</span>,89&#125;,<br>&#123;<span class="hljs-string">&quot;2402060004&quot;</span>,<span class="hljs-string">&quot;pettter&quot;</span>,34&#125;,<br>&#123;<span class="hljs-string">&quot;2402060008&quot;</span>,<span class="hljs-string">&quot;mike&quot;</span>,99&#125;,<br>&#123;<span class="hljs-string">&quot;2402060009&quot;</span>,<span class="hljs-string">&quot;haha&quot;</span>,60&#125;<br>&#125;;<br>   <br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,xuesheng[0].xuehao);<br><br>&#125;<br>//============================================================计算机模块相关函数.<br><br>//--------------------------入栈函数<br><br>void push(zhan *s,double e) <br>&#123;<br>s-&gt;top ++;<br>s-&gt;data[s-&gt;top] = e;<br>&#125;<br><br>//----------------------------出栈函数<br><br>double pop(zhan *s)<br>&#123;<br>double num = s-&gt;data[s-&gt;top];<br>s-&gt;top --;<br><span class="hljs-built_in">return</span> num;<br>&#125;<br><br>//-------------------------------初始化栈函数 <br><br>void CSH (zhan *s)<br>&#123;<br>s-&gt;top = -1; <br>&#125;<br>//--------------------------------判断是否为空<br><br>int iskong(zhan *s)<br>&#123;<br><span class="hljs-built_in">return</span> s-&gt;top == -1; <br>&#125;<br><br><br> <br>//--------------------------------获取运算符优先级函数<br><br>int getBig(char ch)<br>&#123;<br><span class="hljs-keyword">if</span>(ch == <span class="hljs-string">&#x27;*&#x27;</span> || ch == <span class="hljs-string">&#x27;/&#x27;</span> || ch == <span class="hljs-string">&#x27;%&#x27;</span>)<br>&#123;<br><span class="hljs-built_in">return</span> 2;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">return</span> 1;<br>&#125;<br> <br>&#125;<br><br>//---------------------------------计算函数<br><br>double computer (double num1,char ch,double num2)<br>&#123;<br>switch (ch)<br>&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:<br><span class="hljs-built_in">return</span> num1 + num2;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;-&#x27;</span>:<br> <span class="hljs-built_in">return</span> num1 - num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span> :<br>    <span class="hljs-keyword">if</span>(num2 == 0)<br>    &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;除数不能为0!&quot;</span>);<br>    <span class="hljs-built_in">exit</span>(1);<br>&#125;<br>    <span class="hljs-built_in">return</span> num1 / num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span> :<br>    <span class="hljs-built_in">return</span> num1 * num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;%&#x27;</span> :<br>    <span class="hljs-built_in">return</span> (int)num1 % (int)num2;<br>    default:<br>    <span class="hljs-built_in">return</span> 0; <br>&#125;<br>&#125;<br><br>//--------------------------------字符串处理函数<br><br>double deal (char *expression)<br>&#123;<br>zhan numzhan;<br>zhan chzhan;<br>CSH(&amp;numzhan);<br>CSH(&amp;chzhan);<br><br>int i = 0;<br><span class="hljs-keyword">while</span>(i &lt; strlen(expression))<br>&#123;<br><br>  /*<span class="hljs-keyword">if</span>( expresstion[i] != <span class="hljs-string">&#x27;*&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;/&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;+&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;-&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;%&#x27;</span>)<br><br><span class="hljs-keyword">if</span>(expresstion[i] &lt; <span class="hljs-string">&#x27;0&#x27;</span> &amp;&amp; expresstion[i] &gt; <span class="hljs-string">&#x27;9&#x27;</span>)<br>&#123;<br>i++;<br>&#125;<br>  */<br>    <span class="hljs-keyword">if</span>(isdigit(expression[i]))<br>    &#123;<br>    double num = 0;<br>    <span class="hljs-keyword">while</span>(isdigit(expression[i]))<br>    &#123;<br>    num = num*10 + (expression[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br>    i++;<br>&#125;<br>push(&amp;numzhan,num);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(expression[i] == <span class="hljs-string">&#x27;(&#x27;</span>)<br>&#123;<br>push(&amp;chzhan,expression[i]);<br>i++;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(expression[i] == <span class="hljs-string">&#x27;)&#x27;</span>)<br>&#123;<br><span class="hljs-keyword">while</span>(!iskong(&amp;chzhan) &amp;&amp; chzhan.data[chzhan.top] != <span class="hljs-string">&#x27;(&#x27;</span>)<br>&#123;<br>double num2 = pop(&amp;numzhan);<br>double num1 = pop(&amp;numzhan);<br>char ch = pop(&amp;chzhan);<br>double result = computer(num1,ch,num2);<br>push(&amp;numzhan,result);<br>&#125;<br>pop(&amp;chzhan);<br>i++;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>char ch = expression[i];<br><span class="hljs-keyword">while</span>(!iskong(&amp;chzhan) &amp;&amp; getBig(ch) &lt;= getBig(chzhan.data[chzhan.top]) )<br>&#123;<br>double num2 = pop(&amp;numzhan);<br>double num1 = pop(&amp;numzhan);<br>char ch = pop(&amp;chzhan);<br>double result = computer(num1,ch,num2);<br>push(&amp;numzhan,result);<br>&#125;<br>push(&amp;chzhan,ch);<br>i++;<br>&#125;<br><br>&#125;<br><span class="hljs-keyword">while</span>( !iskong(&amp;chzhan))<br>&#123;<br>double num2 = pop(&amp;numzhan);<br>double num1 = pop(&amp;numzhan);<br>char ch = pop (&amp;chzhan);<br>double result = computer(num1,ch,num2);<br>push (&amp;numzhan,result); <br>&#125;<br><span class="hljs-built_in">return</span> numzhan.data[numzhan.top];<br>&#125;<br>//-----------------------------   改键位.<br>void Setting(char *game,char *score,char *computer,char *setting,char *set_mima)<br>&#123;<br>int mark; <br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br>mark_Setting: <br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;输入1111回到主界面.\n&quot;</span>); <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请选择您要修改的键位(1-&gt;game,2-&gt;score,3-&gt;computer,4-&gt;setting,5-&gt;set_mima):&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>,&amp;mark);<br>fflush(stdin);<br><span class="hljs-keyword">if</span>(mark == 1)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您要将入口从%c修改为:&quot;</span>);<br>char mark ;<br> <br>scanf(<span class="hljs-string">&quot;%c&quot;</span>,&amp;mark);<br>fflush(stdin);<br><span class="hljs-keyword">if</span>(mark == *score || mark == *computer || mark == *setting || mark == *set_mima) <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;--------------------------------非法输入---------------------------------\n&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br>goto mark_Setting; <br>&#125;<br>*game = mark; <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;修改成功!&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_Setting; <br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mark == 2)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您要将入口从%c修改为:&quot;</span>);<br>char mark ;<br>fflush(stdin); <br>scanf(<span class="hljs-string">&quot;%c&quot;</span>,&amp;mark);<br>fflush(stdin);<br><span class="hljs-keyword">if</span>(mark == *game || mark == *computer || mark == *setting || mark == *set_mima) <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;--------------------------------非法输入---------------------------------\n&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br>goto mark_Setting; <br>&#125;<br>*score = mark; <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;修改成功!&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_Setting; <br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mark == 3)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您要将入口从%c修改为:&quot;</span>);<br>char mark ;<br>fflush(stdin); <br>scanf(<span class="hljs-string">&quot;%c&quot;</span>,&amp;mark);<br>fflush(stdin);<br><span class="hljs-keyword">if</span>(mark == *game || mark == *score || mark == *setting || mark == *set_mima) <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;--------------------------------非法输入---------------------------------\n&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br>goto mark_Setting; <br>&#125;<br>*computer = mark; <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;修改成功!&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_Setting; <br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mark == 4)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您要将入口从%c修改为:&quot;</span>);<br>char mark ;<br>fflush(stdin); <br>scanf(<span class="hljs-string">&quot;%c&quot;</span>,&amp;mark);<br>fflush(stdin);<br><span class="hljs-keyword">if</span>(mark == *game || mark == *computer || mark == *score || mark == *set_mima) <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;--------------------------------非法输入---------------------------------\n&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br>goto mark_Setting; <br>&#125;<br>*setting = mark; <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;修改成功!&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_Setting; <br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mark == 5)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;您要将入口从%c修改为:&quot;</span>);<br>char mark ;<br>fflush(stdin); <br>scanf(<span class="hljs-string">&quot;%c&quot;</span>,&amp;mark);<br>fflush(stdin);<br><span class="hljs-keyword">if</span>(mark == *game || mark == *computer || mark == *setting || mark == *score) <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;--------------------------------非法输入---------------------------------\n&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br>goto mark_Setting; <br>&#125;<br>*set_mima = mark; <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;修改成功!&quot;</span>);<br>system(<span class="hljs-string">&quot;pause&quot;</span>); <br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_Setting; <br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(mark == 1111)<br>&#123;<br>fflush(stdin);<br>system(<span class="hljs-string">&quot;cls&quot;</span>) ;<br><span class="hljs-built_in">return</span>; <br>&#125; <br>  <br>&#125; <br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言</tag>
      
      <tag>大作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java面向对象-4</title>
    <link href="/2024/12/18/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-4/"/>
    <url>/2024/12/18/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-4/</url>
    
    <content type="html"><![CDATA[<h2 id="今天"><a href="#今天" class="headerlink" title="今天."></a>今天.</h2><h2 id="this-的内存原理"><a href="#this-的内存原理" class="headerlink" title="this 的内存原理"></a>this 的内存原理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class Student<br>&#123;<br>     private int age;<br>     public void <span class="hljs-function"><span class="hljs-title">method</span></span> ( )<br>     &#123;<br>          int age = 10;<br>          System.out.println(age);<br>          System.out.println(this.age);<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>this 的作用: 区分局部变量和成员变量.</li><li>this 的本质: 所在方法调用者的地址值.</li></ul><h2 id="他的意思就是-this-其实就相当于一个前缀-就像-Student1-name-这个Student1-一样"><a href="#他的意思就是-this-其实就相当于一个前缀-就像-Student1-name-这个Student1-一样" class="headerlink" title="他的意思就是 this 其实就相当于一个前缀, 就像 Student1.name 这个Student1 一样."></a>他的意思就是 this 其实就相当于一个前缀, 就像 Student1.name 这个Student1 一样.</h2><h2 id="成员变量-和-局部变量"><a href="#成员变量-和-局部变量" class="headerlink" title="成员变量 和 局部变量"></a>成员变量 和 局部变量</h2><p>我们知道成员变量就是类中方法外的变量, 局部变量就是方法中的变量.</p><p>然后是跟着黑马写了个小游戏:</p><p>JavaBean:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs bash">package YXLtest;<br><br>public class role<br>&#123;<br><br>    private String name;<br>    private int blood;<br>    private int power;<br><br>    public <span class="hljs-function"><span class="hljs-title">role</span></span> ()<br>    &#123;&#125;<br><br>    public role (String name, int blood,int power)<br>    &#123;<br>        this.name = name;<br>        this.blood = blood;<br>        this.power = power;<br>    &#125;<br><br>    public void setName(String name)<br>    &#123;<br>        this.name = name;<br>    &#125;<br>    public String <span class="hljs-function"><span class="hljs-title">getName</span></span>()<br>    &#123;<br>        <span class="hljs-built_in">return</span> name;<br>    &#125;<br>    public void setBlood(int blood)<br>    &#123;<br>        this.blood = blood;<br>    &#125;<br>    public int <span class="hljs-function"><span class="hljs-title">getBlood</span></span> ()<br>    &#123;<br>        <span class="hljs-built_in">return</span> this.blood;<br>    &#125;<br>    public void setPower(int power)<br>    &#123;<br>        this.power = power;<br>    &#125;<br>    public int <span class="hljs-function"><span class="hljs-title">getPower</span></span>()<br>    &#123;<br>        <span class="hljs-built_in">return</span> this.power;<br>    &#125;<br><br><br><br>    public void attack(role attackered)<br>    &#123;<br>        attackered.setBlood(attackered.getBlood() - this.getPower());<br>        attackered.setBlood( attackered.getBlood() &gt;= 0 ?attackered.getBlood():0);<br>        System.out.println(this.name+<span class="hljs-string">&quot;挥起拳头打了&quot;</span>+attackered.name+<span class="hljs-string">&quot;造成了&quot;</span>+this.power+<span class="hljs-string">&quot;点伤害&quot;</span>+attackered.name+<span class="hljs-string">&quot;剩余&quot;</span>+attackered.getBlood()+<span class="hljs-string">&quot;点血量&quot;</span>);<br><br>    &#125;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash">package YXLtest;<br><br>public class Game<br>&#123;<br>    public static void main(String[] args)<br>    &#123;<br>        int i = 0;<br>        role gjx = new role(<span class="hljs-string">&quot;gjx&quot;</span>,100,10);<br>        role yxl = new role(<span class="hljs-string">&quot;yxl&quot;</span>,999,20);<br>        <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>        &#123;<br><br>            i++;<br>            <span class="hljs-keyword">if</span>(yxl.getBlood()==0 )<br>            &#123;<br>                System.out.println(gjx.getName()+<span class="hljs-string">&quot;获胜!&quot;</span>);<br>                <span class="hljs-built_in">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(gjx.getBlood()==0)<br>            &#123;<br>                System.out.println(yxl.getName()+<span class="hljs-string">&quot;获胜!&quot;</span>);<br>                <span class="hljs-built_in">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (i % 2 == 0) &#123;<br>                gjx.attack(yxl);<br>            &#125;<br>            <span class="hljs-keyword">else</span> &#123;<br>                yxl.attack(gjx);<br>            &#125;<br><br><br>        &#125;<br>    &#125;<br><br><br>&#125;<br></code></pre></td></tr></table></figure><p>效果是这样的:</p><p><img src="/images/%E5%B0%8F%E6%B8%B8%E6%88%8F1.png"></p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
      <tag>面向对象</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大作业进度-2</title>
    <link href="/2024/12/17/%E5%A4%A7%E4%BD%9C%E4%B8%9A%E8%BF%9B%E5%BA%A6-3/"/>
    <url>/2024/12/17/%E5%A4%A7%E4%BD%9C%E4%B8%9A%E8%BF%9B%E5%BA%A6-3/</url>
    
    <content type="html"><![CDATA[<p>今天早上 7:30 醒了, 当时我以为室友以为要上早八呢,听到关门声.<br>然后就接着睡了, 9点左右起的床, 以为要上课, 结果今天没课, 然后去实验室打算把计算模块自己写出来.<br>没带钥匙, 回寝室了.<br>啥也没干, 刷了一个小时视频.<br>11 : 00 出发去吃饭.<br>11 : 40 在寝室打王者.<br>1 : 15 左右午休.<br>2 : 00 起床.<br>2 : 15 到实验室.<br>5 : 10 去吃饭.<br>5 : 35 写小论文<br>6: 15 洗澡<br>6: 50 来实验室<br>22 : 00 写这篇日记<br>这就是太学牲的一天.</p><p>下午三个小时, 啥也没干就写了两次计算机.<br>因为大作业又长又臭, 所以计算模块试写在新的项目上面.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br><span class="hljs-comment">#include&lt;string.h&gt;</span><br><span class="hljs-comment">#include&lt;stdlib.h&gt;</span><br><span class="hljs-comment">#include&lt;ctype.h&gt;</span><br>typedef struct zhan<br>&#123;<br>double data [100];  //double 类型的数组可以用来存储字符,不过是其Ascll表对应的数据. <br>int top;<br>&#125;zhan;<br><br>void CSHzhan (zhan *s)<br>&#123;<br>s-&gt;top = -1;<br>&#125;<br>void push (zhan *s,double e)<br>&#123;<br>s-&gt;top ++;<br>s-&gt;data[s-&gt;top] = e;<br>&#125;<br>double pop(zhan *s)<br>&#123;<br><span class="hljs-keyword">if</span>(s-&gt;top == -1)<br>&#123;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br>double  e = s-&gt;data[s-&gt;top];<br>s-&gt;top --;<br><span class="hljs-built_in">return</span> e;<br>&#125;<br>int iskong(zhan *s)<br>&#123;<br><span class="hljs-built_in">return</span> s-&gt;top == -1;<br>&#125;<br>double computer (double num1,char ch,double num2)<br>&#123;<br>switch (ch)<br>&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:<br><span class="hljs-built_in">return</span> num1 + num2;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;-&#x27;</span>:<br> <span class="hljs-built_in">return</span> num1 - num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span> :<br>    <span class="hljs-keyword">if</span>(num2 == 0)<br>    &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;除数不能为0!&quot;</span>);<br>    <span class="hljs-built_in">exit</span>(1); <br>&#125;<br>    <span class="hljs-built_in">return</span> num1 / num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span> :<br>    <span class="hljs-built_in">return</span> num1 * num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;%&#x27;</span> :<br>    <span class="hljs-built_in">return</span> (int)num1 % (int)num2;<br>    default:<br>    <span class="hljs-built_in">return</span> 0; <br>&#125;<br>&#125;<br>int getBig(char ch)<br>&#123;<br><span class="hljs-keyword">if</span>(ch == <span class="hljs-string">&#x27;*&#x27;</span> || ch == <span class="hljs-string">&#x27;/&#x27;</span> || ch == <span class="hljs-string">&#x27;%&#x27;</span>)<br>&#123;<br><span class="hljs-built_in">return</span> 2;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">return</span> 1;<br>&#125;<br> <br>&#125;<br>int deal(char *expresstion)<br>&#123;<br>zhan numzhan;<br>    zhan chzhan;<br><br>CSHzhan(&amp;numzhan);<br>CSHzhan(&amp;chzhan);<br>int i = 0;<br><span class="hljs-keyword">while</span>(i &lt; strlen(expresstion))<br>&#123;<br><br>/*<span class="hljs-keyword">if</span>( expresstion[i] != <span class="hljs-string">&#x27;*&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;/&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;+&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;-&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;%&#x27;</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(expresstion[i] &lt; <span class="hljs-string">&#x27;0&#x27;</span> &amp;&amp; expresstion[i] &gt; <span class="hljs-string">&#x27;9&#x27;</span>)<br>&#123;<br>i++;<br>&#125;<br>&#125;*/<br> <span class="hljs-keyword">if</span>(isdigit(expresstion[i]))<br>&#123;<br>double num = 0;<br><span class="hljs-keyword">while</span>(isdigit(expresstion[i]))<br>&#123;<br>num = num*10 + (expresstion[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br>i++;<br><br>&#125;<br>push(&amp;numzhan,num);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (expresstion[i] == <span class="hljs-string">&#x27;(&#x27;</span>)<br>&#123;<br>push (&amp;chzhan,expresstion[i]);<br>i++;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (expresstion[i] == <span class="hljs-string">&#x27;)&#x27;</span>)<br>&#123;<br><span class="hljs-keyword">while</span>(!iskong(&amp;chzhan) &amp;&amp; chzhan.data[chzhan.top] != <span class="hljs-string">&#x27;(&#x27;</span>)<br>&#123;<br>double num2 = pop(&amp;numzhan);<br>double num1 = pop(&amp;numzhan);<br>char ch = pop(&amp;chzhan);<br>double result = computer(num1,ch,num2);<br>push(&amp;numzhan,result); <br>&#125;<br>pop(&amp;chzhan);<br>i++;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>char ch = expresstion[i];<br><span class="hljs-keyword">while</span>(!iskong(&amp;chzhan) &amp;&amp; getBig(ch) &lt;= getBig(chzhan.data[chzhan.top]))<br>&#123;<br>double num2 = pop(&amp;numzhan);<br>double num1 = pop(&amp;numzhan);<br>char ch = pop(&amp;chzhan);<br>double result = computer(num1,ch,num2);<br>push(&amp;numzhan,result);<br>&#125;<br>push(&amp;chzhan, ch);<br>i++;<br>&#125;<br><br>&#125;<br><span class="hljs-keyword">while</span>(!iskong(&amp;chzhan))<br>&#123;<br>double num2 = pop(&amp;numzhan);<br>double num1 = pop(&amp;numzhan);<br>char ch = pop(&amp;chzhan) ;<br>double result = computer(num1,ch,num2);<br>push (&amp;numzhan,result);<br><br>&#125; <br><span class="hljs-built_in">return</span> pop(&amp;numzhan);<br>&#125;<br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br>    char expresstion[100];<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入表达式:&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%s&quot;</span>,expresstion);<br>double result;<br>    result = deal(expresstion);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s=%f&quot;</span>,expresstion,result);<br><br>&#125;<br></code></pre></td></tr></table></figure><p>昨天那个防小调皮的想法一加上去也防不了, 也是没时间再去研究, 直接给他注释掉了.我自个儿输入表达式的时候忍住不空格就行.<br>打算放到最后再来研究.</p><p>然哈再放在了大作业里面又写了一遍.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#define _CRT_SECURE_NO_WARNINGS</span><br><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br><span class="hljs-comment">#include&lt;string.h&gt;</span><br><span class="hljs-comment">#include&lt;stdlib.h&gt;</span><br><span class="hljs-comment">#include&lt;time.h&gt;</span><br><span class="hljs-comment">#include&lt;ctype.h&gt;</span><br><br>//------------------------------定义新的数据类型,方便指针的声明. <br>typedef struct zhan                <br>&#123;<br>double data[100];<br>int top;<br>&#125;zhan;<br>//------------------------------------提示系统后面有的函数 <br>void CSH (zhan *s);<br>void push (zhan *s,double e);<br>double pop(zhan *s);<br>int iskong(zhan *s);<br>double computer (double num1,char ch,double num2);<br>int getBig(char ch);<br>double deal(char *expression);<br>void house_score(long long in_xuehao);<br><br>//------------------------------------------<br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;声明:因系统制作组学艺不精!请保证每次输入后只按一次回车键!否则回车符堆积缓冲区会造成系统运行出错!\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;知悉后按下任意键运行系统.&quot;</span>);<br>getchar();                            //程序运行到<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>//-----------------------获取时间的操作<br><br>time_t current_time = time(NULL);<br>struct tm* BJH = localtime(&amp;current_time);<br>int year = BJH-&gt;tm_year + 1900;               //BJH-&gt;tm_year  得到tm 结构体中1990年到现在经过了多少时间.<br>int month = BJH-&gt;tm_mon + 1;               // tm结构体中 mon 存储的月份只有 0 - 11,所以+1.<br>int day = BJH-&gt;tm_mday;<br>int hour = BJH-&gt;tm_hour;<br>int min = BJH-&gt;tm_min;<br>int sec = BJH-&gt;tm_sec;<br><br>//------------------------设置界面存储操作的变量.<br>char game = <span class="hljs-string">&#x27;1&#x27;</span>;<br>char score = <span class="hljs-string">&#x27;2&#x27;</span>;<br>char computer = <span class="hljs-string">&#x27;3&#x27;</span>;<br>char setting = <span class="hljs-string">&#x27;4&#x27;</span>;<br>char set_mima = <span class="hljs-string">&#x27;5&#x27;</span>;<br><br>//-----------------------比较重要的几个变量<br><br>char input;           //接收用户输入.<br><br>//---------------------------------------密码变量<br><br>char true_mima[20] = <span class="hljs-string">&quot;123456&quot;</span>;<br>char input_mima[20];<br>int mark_mima = 0;<br>int mark_cishu = 0;<br><br>//----------------------------------------------密码检测模块<br><br>YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == 3)<br>&#123;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入您的%d位数密码(您还剩%d次机会):&quot;</span>, strlen(true_mima), 3 - mark_cishu);<br>fgets(input_mima, strlen(true_mima) + 1, stdin);//fgets 会吃一个回车符,所以+1.<br>//printf(<span class="hljs-string">&quot; % c&quot;</span>, input_mima[5]);<br>mark_mima = 0;<br><span class="hljs-keyword">for</span> (int i = 0; i &lt; strlen(true_mima); i++)<br>&#123;<br><span class="hljs-keyword">if</span> (true_mima[i] != input_mima[i])<br>&#123;<br>getchar();<br>mark_mima = 1;<br>mark_cishu++;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密码错误!&quot;</span>);<br>goto YXL;<br>&#125;<br>&#125;<br>//printf(<span class="hljs-string">&quot;%d,%d&quot;</span>, strlen(true_mima), strlen(input_mima));<br><span class="hljs-keyword">if</span> (mark_mima == 0 &amp;&amp; strlen(true_mima) == strlen(input_mima))<br>&#123;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;欢迎回来!\n(按下任意键进入...)&quot;</span>);<br>getchar();//输入的时候留了一个回车没吃在缓冲区,现在吃<br>getchar();//执行到此处时程序停止,等待用户输入再执行下面清屏的操作.<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><br>//------------------------------------------------------------------------主界面<br><br><br>mark_dasktop:<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;//----------------------------------------------------------------------------------------------------\\\\\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||----------------------------------------------------------------------------------------------------||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;|| 小组成员:BJH.YXL                                                                                   ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c开始小游戏.                                                            ||\n&quot;</span>, game);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c进入查询成绩.                                                          ||\n&quot;</span>, score);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c使用计算机.                                                            ||\n&quot;</span>, computer);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c调整设置.                                                              ||\n&quot;</span>, setting);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c修改密码.                                                              ||\n&quot;</span>, set_mima);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                    %d/%d/%d/%d/%d||\n&quot;</span>, year, month, day, hour, min);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||----------------------------------------------------------------------------------------------------||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\\\\----------------------------------------------------------------------------------------------------//\n&quot;</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;执行操作(按下O关闭电脑):&quot;</span>);<br><br>//--------------------------------------指令输入以及错误指令预防<br>int mark_misinput = 0;<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;input);<br><span class="hljs-keyword">while</span> (input != game &amp;&amp; input != score &amp;&amp; input != computer &amp;&amp; input != setting &amp;&amp; input != set_mima)<br>&#123;<br><br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>getchar();<br>mark_misinput++;<br><span class="hljs-keyword">if</span> (mark_misinput == 10)<br>&#123;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;非有效指令!如果想关闭电脑请按下O\n程序将在本次运行共计输入十次错误指令后自动结束运行!(当前错误次数:%d)\n&quot;</span>, mark_misinput);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;执行操作:&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;input);<br><span class="hljs-keyword">if</span> (input == <span class="hljs-string">&#x27;O&#x27;</span>)<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br>//------------------------------------------交派模块运行指令<br><br><span class="hljs-keyword">if</span> (input == game)<br>&#123;<br>goto mark_game;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == score)<br>&#123;<br>goto mark_score;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == computer)<br>&#123;<br>goto mark_computer;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == setting)<br>&#123;<br>goto mark_setting;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == set_mima)<br>&#123;<br>goto mark_set_mima;<br>&#125;<br><br>//---------------------------------------------游戏模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_game:<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;游戏\n&quot;</span>);<br>//----------------<br><br><br>srand((unsigned int)time(NULL));<br>int answer = (rand() % 100) + 1;<br>int i;<br>int a = 1;<br>int b = 100;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[1，100]的数字：&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br><span class="hljs-keyword">if</span> (i &lt; a || i&gt; b)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;不玩算了!&quot;</span>);<br>goto mark_dasktop;<br>&#125;<br><span class="hljs-keyword">while</span> (i != answer)<br>&#123;<br><br><span class="hljs-keyword">if</span> (i &gt; answer &amp;&amp; i &gt;= a &amp;&amp; i &lt;= b)<br>&#123;<br>b = i;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[%d，%d]的数字(输入区间以外数字返回桌面)：&quot;</span>, a, i);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br><span class="hljs-keyword">if</span> (i == answer)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恭喜你，猜中啦！\n(按下任意键回到桌面)&quot;</span>);<br>getchar();<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_dasktop;<br><br><br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (i &lt; answer &amp;&amp; i &gt;= a &amp;&amp; i &lt;= b)<br>&#123;<br>a = i;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[%d，%d]的数字(输入区间以外数字返回桌面)：&quot;</span>, i, b);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br><span class="hljs-keyword">if</span> (i == answer)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恭喜你，猜对啦!&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_dasktop;<br><span class="hljs-built_in">break</span>;<br>&#125;<br>&#125;<br>&#125;<br>//---------------------------------------------成绩模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_score:<br>house_score(123);<br><br>&#125;<br>//---------------------------------------------计算模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_computer:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入表达式:&quot;</span>);<br>char expression [100];<br>scanf(<span class="hljs-string">&quot;%s&quot;</span>,expression);<br>double result = deal(expression);<br>system(<span class="hljs-string">&quot;cls&quot;</span>); <br><span class="hljs-built_in">printf</span> (<span class="hljs-string">&quot;%s = %f&quot;</span>,expression,result);<br>&#125;<br>//---------------------------------------------设置模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_setting:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;shezhi&quot;</span>);<br>&#125;<br>//---------------------------------------------密码模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_set_mima:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密码&quot;</span>);<br>&#125;<br><br><br><br>&#125;<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br>//--------------------------------------成绩查询模块 <br>void house_score(long long in_xuehao)<br>&#123;<br>struct instruction<br>&#123;<br>char xuehao[11];<br>char name[20];<br>int score;<br>&#125;;<br>struct instruction xuesheng[10] =<br>&#123;<br>&#123;<span class="hljs-string">&quot;2402060629&quot;</span>,<span class="hljs-string">&quot;BJH&quot;</span>,100&#125;,<br>&#123;<span class="hljs-string">&quot;2402061111&quot;</span>,<span class="hljs-string">&quot;YXL&quot;</span>,100&#125;,<br>&#123;<span class="hljs-string">&quot;2402060000&quot;</span>,<span class="hljs-string">&quot;Jack&quot;</span>,85&#125;,<br>&#123;<span class="hljs-string">&quot;2402060001&quot;</span>,<span class="hljs-string">&quot;Amy&quot;</span>,37&#125;,<br>&#123;<span class="hljs-string">&quot;2402060002&quot;</span>,<span class="hljs-string">&quot;Java&quot;</span>,0&#125;,<br>&#123;<span class="hljs-string">&quot;2402060003&quot;</span>,<span class="hljs-string">&quot;Python&quot;</span>,0&#125;,<br>&#123;<span class="hljs-string">&quot;2402050003&quot;</span>,<span class="hljs-string">&quot;Jeeny&quot;</span>,89&#125;,<br>&#123;<span class="hljs-string">&quot;2402060004&quot;</span>,<span class="hljs-string">&quot;pettter&quot;</span>,34&#125;,<br>&#123;<span class="hljs-string">&quot;2402060008&quot;</span>,<span class="hljs-string">&quot;mike&quot;</span>,99&#125;,<br>&#123;<span class="hljs-string">&quot;2402060009&quot;</span>,<span class="hljs-string">&quot;haha&quot;</span>,60&#125;<br>&#125;;<br>   <br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,xuesheng[0].xuehao);<br><br>&#125;<br>//============================================================计算机模块相关函数.<br><br>//--------------------------入栈函数<br><br>void push(zhan *s,double e) <br>&#123;<br>s-&gt;top ++;<br>s-&gt;data[s-&gt;top] = e;<br>&#125;<br><br>//----------------------------出栈函数<br><br>double pop(zhan *s)<br>&#123;<br>double num = s-&gt;data[s-&gt;top];<br>s-&gt;top --;<br><span class="hljs-built_in">return</span> num;<br>&#125;<br><br>//-------------------------------初始化栈函数 <br><br>void CSH (zhan *s)<br>&#123;<br>s-&gt;top = -1; <br>&#125;<br>//--------------------------------判断是否为空<br><br>int iskong(zhan *s)<br>&#123;<br><span class="hljs-built_in">return</span> s-&gt;top == -1; <br>&#125;<br><br><br> <br>//--------------------------------获取运算符优先级函数<br><br>int getBig(char ch)<br>&#123;<br><span class="hljs-keyword">if</span>(ch == <span class="hljs-string">&#x27;*&#x27;</span> || ch == <span class="hljs-string">&#x27;/&#x27;</span> || ch == <span class="hljs-string">&#x27;%&#x27;</span>)<br>&#123;<br><span class="hljs-built_in">return</span> 2;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">return</span> 1;<br>&#125;<br> <br>&#125;<br><br>//---------------------------------计算函数<br><br>double computer (double num1,char ch,double num2)<br>&#123;<br>switch (ch)<br>&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:<br><span class="hljs-built_in">return</span> num1 + num2;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;-&#x27;</span>:<br> <span class="hljs-built_in">return</span> num1 - num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span> :<br>    <span class="hljs-keyword">if</span>(num2 == 0)<br>    &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;除数不能为0!&quot;</span>);<br>    <span class="hljs-built_in">exit</span>(1);<br>&#125;<br>    <span class="hljs-built_in">return</span> num1 / num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span> :<br>    <span class="hljs-built_in">return</span> num1 * num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;%&#x27;</span> :<br>    <span class="hljs-built_in">return</span> (int)num1 % (int)num2;<br>    default:<br>    <span class="hljs-built_in">return</span> 0; <br>&#125;<br>&#125;<br><br>//--------------------------------字符串处理函数<br><br>double deal (char *expression)<br>&#123;<br>zhan numzhan;<br>zhan chzhan;<br>CSH(&amp;numzhan);<br>CSH(&amp;chzhan);<br><br>int i = 0;<br><span class="hljs-keyword">while</span>(i &lt; strlen(expression))<br>&#123;<br><br>  /*<span class="hljs-keyword">if</span>( expresstion[i] != <span class="hljs-string">&#x27;*&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;/&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;+&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;-&#x27;</span> &amp;&amp; expresstion[i] != <span class="hljs-string">&#x27;%&#x27;</span>)<br><br><span class="hljs-keyword">if</span>(expresstion[i] &lt; <span class="hljs-string">&#x27;0&#x27;</span> &amp;&amp; expresstion[i] &gt; <span class="hljs-string">&#x27;9&#x27;</span>)<br>&#123;<br>i++;<br>&#125;<br>  */<br>    <span class="hljs-keyword">if</span>(isdigit(expression[i]))<br>    &#123;<br>    double num = 0;<br>    <span class="hljs-keyword">while</span>(isdigit(expression[i]))<br>    &#123;<br>    num = num*10 + (expression[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br>    i++;<br>&#125;<br>push(&amp;numzhan,num);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(expression[i] == <span class="hljs-string">&#x27;(&#x27;</span>)<br>&#123;<br>push(&amp;chzhan,expression[i]);<br>i++;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(expression[i] == <span class="hljs-string">&#x27;)&#x27;</span>)<br>&#123;<br><span class="hljs-keyword">while</span>(!iskong(&amp;chzhan) &amp;&amp; chzhan.data[chzhan.top] != <span class="hljs-string">&#x27;(&#x27;</span>)<br>&#123;<br>double num2 = pop(&amp;numzhan);<br>double num1 = pop(&amp;numzhan);<br>char ch = pop(&amp;chzhan);<br>double result = computer(num1,ch,num2);<br>push(&amp;numzhan,result);<br>&#125;<br>pop(&amp;chzhan);<br>i++;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>char ch = expression[i];<br><span class="hljs-keyword">while</span>(!iskong(&amp;chzhan) &amp;&amp; getBig(ch) &lt;= getBig(chzhan.data[chzhan.top]) )<br>&#123;<br>double num2 = pop(&amp;numzhan);<br>double num1 = pop(&amp;numzhan);<br>char ch = pop(&amp;chzhan);<br>double result = computer(num1,ch,num2);<br>push(&amp;numzhan,result);<br>&#125;<br>push(&amp;chzhan,ch);<br>i++;<br>&#125;<br><br>&#125;<br><span class="hljs-keyword">while</span>( !iskong(&amp;chzhan))<br>&#123;<br>double num2 = pop(&amp;numzhan);<br>double num1 = pop(&amp;numzhan);<br>char ch = pop (&amp;chzhan);<br>double result = computer(num1,ch,num2);<br>push (&amp;numzhan,result); <br>&#125;<br><span class="hljs-built_in">return</span> numzhan.data[numzhan.top];<br>&#125;<br></code></pre></td></tr></table></figure><p>这就是今天的大作业的进度了.<br>这两天一直在想把计算模块的详细搭建过程写出来, 但是呢一行一行代码给他讲清楚感觉要大几千字<br>那个简单的密码模块都写了2000多字了.<br>所以最后还是决定以后实在是闲的啥事都没有就把计算模块的原理完完全全给他记个笔记.</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
      <category>日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言</tag>
      
      <tag>大作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java面向对象-3</title>
    <link href="/2024/12/17/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-3/"/>
    <url>/2024/12/17/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-3/</url>
    
    <content type="html"><![CDATA[<hr><h2 id="对象内存图"><a href="#对象内存图" class="headerlink" title="对象内存图"></a>对象内存图</h2><h2 id="在运行的时候-虚拟机-JVM-会占用一块内存空间-为了更好的利用这块空间-JVM把他分成了五个部分"><a href="#在运行的时候-虚拟机-JVM-会占用一块内存空间-为了更好的利用这块空间-JVM把他分成了五个部分" class="headerlink" title="在运行的时候,虚拟机(JVM)会占用一块内存空间.为了更好的利用这块空间, JVM把他分成了五个部分:"></a>在运行的时候,虚拟机(JVM)会占用一块内存空间.<br>为了更好的利用这块空间, JVM把他分成了五个部分:</h2><h2 id="本地方法栈"><a href="#本地方法栈" class="headerlink" title="本地方法栈"></a>本地方法栈</h2><h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><h2 id="方法区-JDK-8-以后改为元空间"><a href="#方法区-JDK-8-以后改为元空间" class="headerlink" title="方法区(JDK 8 以后改为元空间)"></a>方法区(JDK 8 以后改为元空间)</h2><p>堆</p><p>运行一个类时, 这个类的字节码文件就会放在方法区临时存储.<br>当方法被调用的时候就要进栈执行, 方法中所定义的变量也是在栈中.方法执行完毕就出栈.<br>new 出来的东西会在堆中开辟空间并产生地址.</p><p>&#x2F;&#x2F;———————-<br> 一个对象的内存图</p><p>在创建一个对象的时候.<br>如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Student s = new Student( );<br></code></pre></td></tr></table></figure><p>内存里面至少会做以下的七件事:</p><ol><li><p>加载 class 文件<br> 其实就是把 Studetn 这个类的字节码文件加载到内存.</p></li><li><p>申明局部变量<br> 其实就是对等号左边的 s 进行申明.</p></li><li><p>在堆内存中开辟一个空间<br> 其实就是上面解释过的 new. 而这个小空间就是我们平时所说的对象.</p></li><li><p>默认初始化</p></li><li><p>显示初始化</p></li><li><p>构造方法初始化</p></li></ol><p>这三步其实就是对第三步中的变量来进行赋值的.</p><ol start="7"><li>将堆内存中的地址值赋值给左边的局部变量.</li></ol><p>接下来画图解释</p><p>创建一个类:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class Student<br>&#123;<br>     String name;<br>     int age;<br>     <br><br>     public void <span class="hljs-function"><span class="hljs-title">study</span></span>( )<br>     &#123;<br>          System.out.println(<span class="hljs-string">&quot;好好学习&quot;</span>);<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建一个对象:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class TsetStudent<br>&#123;<br>     public static void main (String[] args)<br>     &#123;<br>          Student s = new Student( );<br>          System.out.println(s);<br>          System.out.println(s.name + <span class="hljs-string">&quot;...&quot;</span> + s.age)<br>          s.name = <span class="hljs-string">&quot;阿强&quot;</span>;<br>          s.age = 23;<br>          System.out.println(s.name + <span class="hljs-string">&quot;...&quot;</span> + s.age);<br>          s.study( );<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113668205449786&bvid=BV1ZKkJYfEwB&cid=27390510504&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" heigth="500%"></iframe><hr><h2 id="两个引用指向同一个对象"><a href="#两个引用指向同一个对象" class="headerlink" title="两个引用指向同一个对象."></a>两个引用指向同一个对象.</h2><p>创建一个类:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class Student<br>&#123;<br>     String name;<br>     int age;<br>     <br><br>     public void <span class="hljs-function"><span class="hljs-title">study</span></span>( )<br>     &#123;<br>          System.out.println(<span class="hljs-string">&quot;好好学习&quot;</span>);<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建一个对象:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class TsetStudent<br>&#123;<br>     public static void main (String[] args)<br>     &#123;<br>          Student stu1 = new Student( );<br>          stu1.name = <span class="hljs-string">&quot;阿强&quot;</span>;<br>          Student stu2 = stu1;<br>          stu2.nme = <span class="hljs-string">&quot;阿珍&quot;</span>;<br>          sout(stu1.name + <span class="hljs-string">&quot;...&quot;</span>  + stu2.name);<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中假设 new Student( ); 返回给 stu1 的地址值为 001.<br>那么 stu2 记录的也是 001 的地址值,利用 stu2 访问的也是 001 这个内存.<br>所以二者只是名称不同, 实则如同两个不同的指针记录同一个地址.</p><p>如果你再将 stu1 赋值为 null, 那么通过 stu1 将无法访问 001 这个内存.<br>很像指针对吧! 同时又很像结构体对不对. 不妨说是 C 的结构体跟指针其实很像.<br>再往下看了一段, 如果你执意调用 stu1 程序将会出现 “NullPointerexception” (空指针) 错误.<br>更加印证了猜想.</p><hr><h2 id="基本数据类型-引用数据类型"><a href="#基本数据类型-引用数据类型" class="headerlink" title="基本数据类型 &amp; 引用数据类型"></a>基本数据类型 &amp; 引用数据类型</h2><ul><li>基本数据类型</li></ul><p>基本数据类型就是在变量当中它存储的是真实的数据值,存储在栈内存当中.<br>int a &#x3D; 10; 10 就存储在 a 中,不与其他变量产生干系.<br>在赋值给其他变量时, 赋的就是真实的值.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">int a = 10;<br>int b = a;<br></code></pre></td></tr></table></figure><p>如果之后再对变量 b 进行修改, 不会影响到 a.<br>相信引用数据类型不用写太详细了.</p><ul><li>引用数据类型</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Student s = new Student( );<br></code></pre></td></tr></table></figure><p>这里创建了一个对象, 你能说 new 在堆内存中开辟的空间中的 name, age 是直接存储在 s 中的吗?<br>s 在栈内存中, 他记录的仅仅是其他小空间的地址值, 所以我们说 s 是引用数据类型.</p><p>黑马程序员总结: 基本数据类型玩自己的, 引用数据类型玩别人的.<br>很到位.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class StudentTset<br>&#123;<br>     public static void main(String[ ] args)<br>     &#123;<br>          int[ ] arr = &#123;1,2,3,4&#125;;<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>int[ ] arr &#x3D; 在栈内存中, 而 {1,2,3,4} 在堆内存中. arr 记录的是其他空间的地址值.</p><p><img src="/images/%E6%95%B0%E7%BB%84%E5%BC%95%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png"></p><p>嗯, 今天就学到这儿了.</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
      <tag>面向对象</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java面向对象-2</title>
    <link href="/2024/12/16/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-2/"/>
    <url>/2024/12/16/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-2/</url>
    
    <content type="html"><![CDATA[<h2 id="今天"><a href="#今天" class="headerlink" title="今天."></a>今天.</h2><h2 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class Student   //这是一个类,一个模板.<br>&#123;<br>     修饰符(private,public)   类名(跟类名一定一致!)   (参数)<br>     &#123;<br>          方法体;<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>注意三点:</p><ul><li>方法名与类名相同,大小写也要一致.</li><li>没有返回值类型,连 void 都没有.</li><li>没有具体的返回值 (不能由 return 带回结果数据)</li></ul><p>下面构造一个类:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class Student<br>&#123;<br>     private String name;<br>     private int age;<br>     <br><br>     public Student( )   //空参构造方法<br>     &#123;<br>          ...<br>     &#125;<br>     <br>     public Student(String name , int age )  //带参构造方法<br>     &#123;<br>          ...<br>     &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>注意两点:</p><ul><li>创建对象的时候由虚拟机调用,不能手动调用构造方法.</li><li>每创建一次对象,都会调用一次构造方法.</li></ul><p>上图:</p><p><img src="/images/%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%951.png"></p><p>每个类里面必须有构造方法,如果你没有写任何构造方法.<br>但如果你没写任何构造方法,虚拟机会自动加一个空参构造方法.<br>但如果你已经写了带参构造,系统便不会为你添加空参构造.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash">pack com.aaaaa.aaaaa<br><br><br>public class Student<br>&#123;<br>     private String name;<br>     private int age;<br>     <br><br><br>     public String <span class="hljs-function"><span class="hljs-title">getName</span></span>()<br>     &#123;<br>          <span class="hljs-built_in">return</span> name;<br>     &#125;<br>     <br>     public void setName(String name)<br>     &#123;<br>          this name = name;<br>     &#125;<br><br>     public int <span class="hljs-function"><span class="hljs-title">getAge</span></span> ()<br>     &#123;<br>          <span class="hljs-built_in">return</span> age;<br>     &#125;<br><br>     public void setAge (int age)<br>     &#123;<br>          this age = age;<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="像上述类中就没有任何构造方法-里面的其他方法-我更愿称之为工具-都带有返回值类型显然不是构造方法-如果你在一个类中定义了两种构造方法-那么系统会根据你创建对象时的参数去调用对应的构造方法-其实在实际去定义一个类时-无参构造方法和带参构造方法都会写上-因为无参可以我们更加方便的去让我们输入变量的值"><a href="#像上述类中就没有任何构造方法-里面的其他方法-我更愿称之为工具-都带有返回值类型显然不是构造方法-如果你在一个类中定义了两种构造方法-那么系统会根据你创建对象时的参数去调用对应的构造方法-其实在实际去定义一个类时-无参构造方法和带参构造方法都会写上-因为无参可以我们更加方便的去让我们输入变量的值" class="headerlink" title="像上述类中就没有任何构造方法,里面的其他方法(我更愿称之为工具)都带有返回值类型显然不是构造方法.如果你在一个类中定义了两种构造方法,那么系统会根据你创建对象时的参数去调用对应的构造方法.其实在实际去定义一个类时,无参构造方法和带参构造方法都会写上.因为无参可以我们更加方便的去让我们输入变量的值."></a>像上述类中就没有任何构造方法,里面的其他方法(我更愿称之为工具)都带有返回值类型显然不是构造方法.<br>如果你在一个类中定义了两种构造方法,那么系统会根据你创建对象时的参数去调用对应的构造方法.<br>其实在实际去定义一个类时,无参构造方法和带参构造方法都会写上.<br>因为无参可以我们更加方便的去让我们输入变量的值.</h2><h2 id="1-构造方法的作用"><a href="#1-构造方法的作用" class="headerlink" title="1.构造方法的作用"></a>1.构造方法的作用</h2><ul><li>创建对象的时候,由虚拟机自动调用,给成员变量进行初始化.</li></ul><hr><h2 id="2-两种构造方法的工作"><a href="#2-两种构造方法的工作" class="headerlink" title="2.两种构造方法的工作"></a>2.两种构造方法的工作</h2><ul><li>无参数构造方法: 初始化对象时, 成员变量的数据均采用默认值.</li><li>有参数构造方法: 初始化对象时, 同时为对象赋值.</li></ul><p>“构造方法就是用来创建对象的”这句话时错的.<br>真正创建对象其实是 new 关键字干的.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class SudentTest<br>&#123;<br>     public static void main (String[] args)<br>     &#123;<br>          Student s1 = new Student (); //是这个 new 创建了一个新的对象.<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>创建对象的时候, 虚拟机会自动调用构造方法, 作用是给成员变量进行初始化的.</p><ul><li>标准的javaBean类</li></ul><ol><li><p>记住成员变量使用 private 修饰.</p></li><li><p>提供至少两个构造方法.</p></li></ol><h2 id="空参"><a href="#空参" class="headerlink" title="-  空参"></a>-<br>  空参</h2><p>  全部参</p><ol start="3"><li>成员方法,</li></ol><ul><li> 提供每一个成员变量对应的 setXxx() &#x2F; getXxx ()</li><li> 根据需求写上其他行为.</li></ul><p>本来学到了-三种情况的对象内存图-, 但是呢看了10分钟,感觉是非常的不对劲, 这个内容很抽象.<br>当时脑子用了一天已经很疲惫了, 打算等一个完美状态给他化抽象为具体.</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
      <tag>面向对象</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大作业进度-2</title>
    <link href="/2024/12/16/%E5%A4%A7%E4%BD%9C%E4%B8%9A%E8%BF%9B%E5%BA%A6-2/"/>
    <url>/2024/12/16/%E5%A4%A7%E4%BD%9C%E4%B8%9A%E8%BF%9B%E5%BA%A6-2/</url>
    
    <content type="html"><![CDATA[<p>今日作业进度:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#define _CRT_SECURE_NO_WARNINGS</span><br><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br><span class="hljs-comment">#include&lt;string.h&gt;</span><br><span class="hljs-comment">#include&lt;stdlib.h&gt;</span><br><span class="hljs-comment">#include&lt;time.h&gt;</span><br><span class="hljs-comment">#include&lt;ctype.h&gt;</span><br><br>//------------------------------声明新的定义,暴力理解:创造一种新的数据类型.<br><br>typedef struct Stack &#123;<br>    double data[100];<br>    int top;<br>&#125; Stack;<br><br>//---------------------------------提醒程序后面有这些函数<br><br>void initStack(Stack *s) ;<br>void push(Stack *s, double num) ;<br>double pop(Stack *s) ;<br>int isEmpty(Stack *s) ;<br>double calculate(double num1, char op, double num2) ;<br>int getPriority(char op) ;<br>double evalExpression(char *expression) ;<br>void house_score(long long in_xuehao);<br><br>//----------------------------------------------------------<br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;声明:因系统制作组学艺不精!请保证每次输入后只按一次回车键!否则回车符堆积缓冲区会造成系统运行出错!\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;知悉后按下任意键运行系统.&quot;</span>);<br>getchar();                            //程序运行到<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>    <br>    <br>    <br>    char expression[100];<br>//-----------------------获取时间的操作<br><br>time_t current_time = time(NULL);<br>struct tm* BJH = localtime(&amp;current_time);<br>int year = BJH-&gt;tm_year + 1900;               //BJH-&gt;tm_year  得到tm 结构体中1990年到现在经过了多少时间.<br>int month = BJH-&gt;tm_mon + 1;               // tm结构体中 mon 存储的月份只有 0 - 11,所以+1.<br>int day = BJH-&gt;tm_mday;<br>int hour = BJH-&gt;tm_hour;<br>int min = BJH-&gt;tm_min;<br>int sec = BJH-&gt;tm_sec;<br><br>//------------------------设置界面存储操作的变量.<br>char game = <span class="hljs-string">&#x27;1&#x27;</span>;<br>char score = <span class="hljs-string">&#x27;2&#x27;</span>;<br>char computer = <span class="hljs-string">&#x27;3&#x27;</span>;<br>char setting = <span class="hljs-string">&#x27;4&#x27;</span>;<br>char set_mima = <span class="hljs-string">&#x27;5&#x27;</span>;<br><br>//-----------------------比较重要的几个变量<br><br>char input;           //接收用户输入.<br><br>//---------------------------------------密码变量<br><br>char true_mima[20] = <span class="hljs-string">&quot;123456&quot;</span>;<br>char input_mima[20];<br>int mark_mima = 0;<br>int mark_cishu = 0;<br><br>//----------------------------------------------密码检测模块<br><br>YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == 3)<br>&#123;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入您的%d位数密码(您还剩%d次机会):&quot;</span>, strlen(true_mima), 3 - mark_cishu);<br>fgets(input_mima, strlen(true_mima) + 1, stdin);//fgets 会吃一个回车符,所以+1.<br>//printf(<span class="hljs-string">&quot; % c&quot;</span>, input_mima[5]);<br>mark_mima = 0;<br><span class="hljs-keyword">for</span> (int i = 0; i &lt; strlen(true_mima); i++)<br>&#123;<br><span class="hljs-keyword">if</span> (true_mima[i] != input_mima[i])<br>&#123;<br>getchar();<br>mark_mima = 1;<br>mark_cishu++;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密码错误!&quot;</span>);<br>goto YXL;<br>&#125;<br>&#125;<br>//printf(<span class="hljs-string">&quot;%d,%d&quot;</span>, strlen(true_mima), strlen(input_mima));<br><span class="hljs-keyword">if</span> (mark_mima == 0 &amp;&amp; strlen(true_mima) == strlen(input_mima))<br>&#123;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;欢迎回来!\n(按下任意键进入...)&quot;</span>);<br>getchar();//输入的时候留了一个回车没吃在缓冲区,现在吃<br>getchar();//执行到此处时程序停止,等待用户输入再执行下面清屏的操作.<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><br>//------------------------------------------------------------------------主界面<br><br><br>mark_dasktop:<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;//----------------------------------------------------------------------------------------------------\\\\\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||----------------------------------------------------------------------------------------------------||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;|| 小组成员:BJH.YXL                                                                                   ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c开始小游戏.                                                            ||\n&quot;</span>, game);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c进入查询成绩.                                                          ||\n&quot;</span>, score);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c使用计算机.                                                            ||\n&quot;</span>, computer);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c调整设置.                                                              ||\n&quot;</span>, setting);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c修改密码.                                                              ||\n&quot;</span>, set_mima);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                    %d/%d/%d/%d/%d||\n&quot;</span>, year, month, day, hour, min);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||----------------------------------------------------------------------------------------------------||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\\\\----------------------------------------------------------------------------------------------------//\n&quot;</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;执行操作(按下O关闭电脑):&quot;</span>);<br><br>//--------------------------------------指令输入以及错误指令预防<br>int mark_misinput = 0;<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;input);<br><span class="hljs-keyword">while</span> (input != game &amp;&amp; input != score &amp;&amp; input != computer &amp;&amp; input != setting &amp;&amp; input != set_mima)<br>&#123;<br><br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>getchar();<br>mark_misinput++;<br><span class="hljs-keyword">if</span> (mark_misinput == 10)<br>&#123;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;非有效指令!如果想关闭电脑请按下O\n程序将在本次运行共计输入十次错误指令后自动结束运行!(当前错误次数:%d)\n&quot;</span>, mark_misinput);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;执行操作:&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;input);<br><span class="hljs-keyword">if</span> (input == <span class="hljs-string">&#x27;O&#x27;</span>)<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br>//------------------------------------------交派模块运行指令<br><br><span class="hljs-keyword">if</span> (input == game)<br>&#123;<br>goto mark_game;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == score)<br>&#123;<br>goto mark_score;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == computer)<br>&#123;<br>goto mark_computer;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == setting)<br>&#123;<br>goto mark_setting;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == set_mima)<br>&#123;<br>goto mark_set_mima;<br>&#125;<br><br>//---------------------------------------------游戏模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_game:<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;游戏\n&quot;</span>);<br>//----------------<br><br><br>srand((unsigned int)time(NULL));<br>int answer = (rand() % 100) + 1;<br>int i;<br>int a = 1;<br>int b = 100;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[1，100]的数字：&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br><span class="hljs-keyword">if</span> (i &lt; a || i&gt; b)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;不玩算了!&quot;</span>);<br>goto mark_dasktop;<br>&#125;<br><span class="hljs-keyword">while</span> (i != answer)<br>&#123;<br><br><span class="hljs-keyword">if</span> (i &gt; answer &amp;&amp; i &gt;= a &amp;&amp; i &lt;= b)<br>&#123;<br>b = i;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[%d，%d]的数字(输入区间以外数字返回桌面)：&quot;</span>, a, i);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br><span class="hljs-keyword">if</span> (i == answer)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恭喜你，猜中啦！\n(按下任意键回到桌面)&quot;</span>);<br>getchar();<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_dasktop;<br><br><br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (i &lt; answer &amp;&amp; i &gt;= a &amp;&amp; i &lt;= b)<br>&#123;<br>a = i;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[%d，%d]的数字(输入区间以外数字返回桌面)：&quot;</span>, i, b);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br><span class="hljs-keyword">if</span> (i == answer)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恭喜你，猜对啦!&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>goto mark_dasktop;<br>                    <span class="hljs-built_in">break</span>;<br>&#125;<br>&#125;<br>&#125;<br>//---------------------------------------------成绩模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_score:<br>house_score(123);<br><br>&#125;<br>//---------------------------------------------计算模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_computer:<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入表达式：&quot;</span>);<br>            scanf(<span class="hljs-string">&quot;%s&quot;</span>, expression);<br>            double result = evalExpression(expression);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;结果为：%.2lf\n&quot;</span>, result);<br>&#125;<br>//---------------------------------------------设置模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_setting:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0&quot;</span>);<br>&#125;<br>//---------------------------------------------密码模块预留区域<br><span class="hljs-keyword">if</span> (0)<br>&#123;<br>mark_set_mima:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密码&quot;</span>);<br>&#125;<br><br><br><br>&#125;<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br>//--------------------------------------成绩查询模块 <br>void house_score(long long in_xuehao)<br>&#123;<br>struct instruction<br>&#123;<br>char xuehao[11];<br>char name[20];<br>int score;<br>&#125;;<br>struct instruction xuesheng[10] =<br>&#123;<br>&#123;<span class="hljs-string">&quot;2402060629&quot;</span>,<span class="hljs-string">&quot;BJH&quot;</span>,100&#125;,<br>&#123;<span class="hljs-string">&quot;2402061111&quot;</span>,<span class="hljs-string">&quot;YXL&quot;</span>,100&#125;,<br>&#123;<span class="hljs-string">&quot;2402060000&quot;</span>,<span class="hljs-string">&quot;Jack&quot;</span>,85&#125;,<br>&#123;<span class="hljs-string">&quot;2402060001&quot;</span>,<span class="hljs-string">&quot;Amy&quot;</span>,37&#125;,<br>&#123;<span class="hljs-string">&quot;2402060002&quot;</span>,<span class="hljs-string">&quot;Java&quot;</span>,0&#125;,<br>&#123;<span class="hljs-string">&quot;2402060003&quot;</span>,<span class="hljs-string">&quot;Python&quot;</span>,0&#125;,<br>&#123;<span class="hljs-string">&quot;2402050003&quot;</span>,<span class="hljs-string">&quot;Jeeny&quot;</span>,89&#125;,<br>&#123;<span class="hljs-string">&quot;2402060004&quot;</span>,<span class="hljs-string">&quot;pettter&quot;</span>,34&#125;,<br>&#123;<span class="hljs-string">&quot;2402060008&quot;</span>,<span class="hljs-string">&quot;mike&quot;</span>,99&#125;,<br>&#123;<span class="hljs-string">&quot;2402060009&quot;</span>,<span class="hljs-string">&quot;haha&quot;</span>,60&#125;<br>&#125;;<br>   <br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,xuesheng[0].xuehao);<br><br>&#125;<br>// 初始化栈<br>void initStack(Stack *s) &#123;<br>    s-&gt;top = -1;<br>&#125;<br><br>// 入栈操作<br>void push(Stack *s, double num) <br>&#123;<br>    s-&gt;top++;<br>    s-&gt;data[s-&gt;top] = num;<br>&#125;<br><br>// 出栈操作<br>double pop(Stack *s) &#123;<br>    <span class="hljs-keyword">if</span> (s-&gt;top == -1) &#123;<br>        <span class="hljs-built_in">return</span> 0;<br>    &#125;<br>    double num = s-&gt;data[s-&gt;top];<br>    s-&gt;top--;<br>    <span class="hljs-built_in">return</span> num;<br>&#125;<br><br>// 判断栈是否为空<br>int isEmpty(Stack *s) &#123;<br>    <span class="hljs-built_in">return</span> s-&gt;top == -1;<br>&#125;<br><br>// 计算函数<br>double calculate(double num1, char op, double num2) &#123;<br>    switch (op) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:<br>        <span class="hljs-built_in">return</span> num1 + num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;-&#x27;</span>:<br>        <span class="hljs-built_in">return</span> num1 - num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span>:<br>        <span class="hljs-built_in">return</span> num1 * num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span>:<br>        <span class="hljs-keyword">if</span> (num2 == 0) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;除数不能为0！\n&quot;</span>);<br>            <span class="hljs-built_in">exit</span>(1);<br>        &#125;<br>        <span class="hljs-built_in">return</span> num1 / num2;<br>    default:<br>        <span class="hljs-built_in">return</span> 0;<br>    &#125;<br>&#125;<br><br>// 获取操作数的优先级<br>int getPriority(char op) &#123;<br>    <span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;*&#x27;</span> || op == <span class="hljs-string">&#x27;/&#x27;</span>) &#123;<br>        <span class="hljs-built_in">return</span> 2;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;+&#x27;</span> || op == <span class="hljs-string">&#x27;-&#x27;</span>) &#123;<br>        <span class="hljs-built_in">return</span> 1;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">return</span> 0;<br>    &#125;<br>&#125;<br><br>// 计算表达式<br>double evalExpression(char *expression) &#123;<br>    Stack numStack;<br>    Stack opStack;<br>    initStack(&amp;numStack);<br>    initStack(&amp;opStack);<br><br>    int i = 0;<br>    int len = strlen(expression);<br>    <span class="hljs-keyword">while</span> (i &lt; len) &#123;<br>        <span class="hljs-keyword">if</span> (isdigit(expression[i])) &#123;<br>            double num = 0;<br>            <span class="hljs-keyword">while</span> (isdigit(expression[i])) &#123;<br>                num = num * 10+(expression[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br>                i++;<br>            &#125;<br>            push(&amp;numStack, num);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (expression[i] == <span class="hljs-string">&#x27;(&#x27;</span>) &#123;<br>            push(&amp;opStack, expression[i]);<br>            i++;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (expression[i] == <span class="hljs-string">&#x27;)&#x27;</span>) &#123;<br>            <span class="hljs-keyword">while</span> (!isEmpty(&amp;opStack) &amp;&amp; opStack.data[opStack.top]!= <span class="hljs-string">&#x27;(&#x27;</span>) &#123;<br>                double num2 = pop(&amp;numStack);<br>                double num1 = pop(&amp;numStack);<br>                char op = pop(&amp;opStack);<br>                double result = calculate(num1, op, num2);<br>                push(&amp;numStack, result);<br>            &#125;<br>            pop(&amp;opStack);<br>            i++;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            char op = expression[i];<br>            <span class="hljs-keyword">while</span> (!isEmpty(&amp;opStack) &amp;&amp; getPriority(op) &lt;= getPriority(opStack.data[opStack.top])) &#123;<br>                double num2 = pop(&amp;numStack);<br>                double num1 = pop(&amp;numStack);<br>                char op1 = pop(&amp;opStack);<br>                double result = calculate(num1, op1, num2);<br>                push(&amp;numStack, result);<br>            &#125;<br>            push(&amp;opStack, op);<br>            i++;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">while</span> (!isEmpty(&amp;opStack)) &#123;<br>        double num2 = pop(&amp;numStack);<br>        double num1 = pop(&amp;numStack);<br>        char op = pop(&amp;opStack);<br>        double result = calculate(num1, op, num2);<br>        push(&amp;numStack, result);<br>    &#125;<br><br>    <span class="hljs-built_in">return</span> pop(&amp;numStack);<br>&#125;<br></code></pre></td></tr></table></figure><p>计算模块的代码是要重新写的,真实进度还是比上面慢两个小时左右.</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>大作业</tag>
      
      <tag>C 语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算模块</title>
    <link href="/2024/12/16/%E8%AE%A1%E7%AE%97%E6%A8%A1%E5%9D%97/"/>
    <url>/2024/12/16/%E8%AE%A1%E7%AE%97%E6%A8%A1%E5%9D%97/</url>
    
    <content type="html"><![CDATA[<p>计算机的话一开始就准备可两种方案,  一种是简单的两个数字的加减乘除:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;stdlib.h&gt;</span><br><span class="hljs-comment">#include &lt;string.h&gt;</span><br><br>// 函数声明<br>double calculate(double num1, char op, double num2);<br><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>() &#123;<br>    char expression[100];<br>    double num1, num2, result;<br>    char op;<br><br>    // 接收用户输入的表达式<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入表达式（例如：2 + 3）：&quot;</span>);<br>    scanf(<span class="hljs-string">&quot;%s&quot;</span>, expression);<br><br>    // 解析表达式<br>    num1 = atof(strtok(expression, <span class="hljs-string">&quot; &quot;</span>));<br>    op = strtok(NULL, <span class="hljs-string">&quot; &quot;</span>)[0];<br>    num2 = atof(strtok(NULL, <span class="hljs-string">&quot; &quot;</span>));<br><br>    // 计算结果<br>    result = calculate(num1, op, num2);<br><br>    // 输出结果<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;结果是：%.2lf\n&quot;</span>, result);<br><br>    <span class="hljs-built_in">return</span> 0;<br>&#125;<br><br>double calculate(double num1, char op, double num2) &#123;<br>    switch (op) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:<br>        <span class="hljs-built_in">return</span> num1 + num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;-&#x27;</span>:<br>        <span class="hljs-built_in">return</span> num1 - num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span>:<br>        <span class="hljs-built_in">return</span> num1 * num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span>:<br>        <span class="hljs-keyword">if</span> (num2 == 0) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;除数不能为0！\n&quot;</span>);<br>            <span class="hljs-built_in">exit</span>(1);<br>        &#125;<br>        <span class="hljs-built_in">return</span> num1 / num2;<br>    default:<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;不支持的运算符！\n&quot;</span>);<br>        <span class="hljs-built_in">exit</span>(1);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这是直接找神奇豆包要的,功能很简陋,想要实现的话也不难.<br>但昨天晚上听说大作业要用到链表等一些高级的数据结构于是我放弃了这个想法.<br>然后找豆包要了一个更高级的计算机代码.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;stdlib.h&gt;</span><br><span class="hljs-comment">#include &lt;string.h&gt;</span><br><span class="hljs-comment">#include &lt;ctype.h&gt;</span><br><br>// 定义栈结构体<br>typedef struct Stack &#123;<br>    double data[100];<br>    int top;<br>&#125; Stack;<br><br>// 初始化栈<br>void initStack(Stack *s) &#123;<br>    s-&gt;top = -1;<br>&#125;<br><br>// 入栈操作<br>void push(Stack *s, double num) &#123;<br>    s-&gt;top++;<br>    s-&gt;data[s-&gt;top] = num;<br>&#125;<br><br>// 出栈操作<br>double pop(Stack *s) &#123;<br>    <span class="hljs-keyword">if</span> (s-&gt;top == -1) &#123;<br>        <span class="hljs-built_in">return</span> 0;<br>    &#125;<br>    double num = s-&gt;data[s-&gt;top];<br>    s-&gt;top--;<br>    <span class="hljs-built_in">return</span> num;<br>&#125;<br><br>// 判断栈是否为空<br>int isEmpty(Stack *s) &#123;<br>    <span class="hljs-built_in">return</span> s-&gt;top == -1;<br>&#125;<br><br>// 计算函数<br>double calculate(double num1, char op, double num2) &#123;<br>    switch (op) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:<br>        <span class="hljs-built_in">return</span> num1 + num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;-&#x27;</span>:<br>        <span class="hljs-built_in">return</span> num1 - num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span>:<br>        <span class="hljs-built_in">return</span> num1 * num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span>:<br>        <span class="hljs-keyword">if</span> (num2 == 0) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;除数不能为0！\n&quot;</span>);<br>            <span class="hljs-built_in">exit</span>(1);<br>        &#125;<br>        <span class="hljs-built_in">return</span> num1 / num2;<br>    default:<br>        <span class="hljs-built_in">return</span> 0;<br>    &#125;<br>&#125;<br><br>// 获取操作数的优先级<br>int getPriority(char op) &#123;<br>    <span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;*&#x27;</span> || op == <span class="hljs-string">&#x27;/&#x27;</span>) &#123;<br>        <span class="hljs-built_in">return</span> 2;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;+&#x27;</span> || op == <span class="hljs-string">&#x27;-&#x27;</span>) &#123;<br>        <span class="hljs-built_in">return</span> 1;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">return</span> 0;<br>    &#125;<br>&#125;<br><br>// 计算表达式<br>double evalExpression(char *expression) &#123;<br>    Stack numStack;<br>    Stack opStack;<br>    initStack(&amp;numStack);<br>    initStack(&amp;opStack);<br><br>    int i = 0;<br>    int len = strlen(expression);<br>    <span class="hljs-keyword">while</span> (i &lt; len) &#123;<br>        <span class="hljs-keyword">if</span> (isdigit(expression[i])) &#123;<br>            double num = 0;<br>            <span class="hljs-keyword">while</span> (isdigit(expression[i])) &#123;<br>                num = num * 10+(expression[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br>                i++;<br>            &#125;<br>            push(&amp;numStack, num);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (expression[i] == <span class="hljs-string">&#x27;(&#x27;</span>) &#123;<br>            push(&amp;opStack, expression[i]);<br>            i++;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (expression[i] == <span class="hljs-string">&#x27;)&#x27;</span>) &#123;<br>            <span class="hljs-keyword">while</span> (!isEmpty(&amp;opStack) &amp;&amp; opStack.data[opStack.top]!= <span class="hljs-string">&#x27;(&#x27;</span>) &#123;<br>                double num2 = pop(&amp;numStack);<br>                double num1 = pop(&amp;numStack);<br>                char op = pop(&amp;opStack);<br>                double result = calculate(num1, op, num2);<br>                push(&amp;numStack, result);<br>            &#125;<br>            pop(&amp;opStack);<br>            i++;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            char op = expression[i];<br>            <span class="hljs-keyword">while</span> (!isEmpty(&amp;opStack) &amp;&amp; getPriority(op) &lt;= getPriority(opStack.data[opStack.top])) &#123;<br>                double num2 = pop(&amp;numStack);<br>                double num1 = pop(&amp;numStack);<br>                char op1 = pop(&amp;opStack);<br>                double result = calculate(num1, op1, num2);<br>                push(&amp;numStack, result);<br>            &#125;<br>            push(&amp;opStack, op);<br>            i++;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">while</span> (!isEmpty(&amp;opStack)) &#123;<br>        double num2 = pop(&amp;numStack);<br>        double num1 = pop(&amp;numStack);<br>        char op = pop(&amp;opStack);<br>        double result = calculate(num1, op, num2);<br>        push(&amp;numStack, result);<br>    &#125;<br><br>    <span class="hljs-built_in">return</span> pop(&amp;numStack);<br>&#125;<br><br><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>() &#123;<br>    char expression[100];<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入表达式：&quot;</span>);<br>    scanf(<span class="hljs-string">&quot;%s&quot;</span>, expression);<br>    double result = evalExpression(expression);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;结果为：%.2lf\n&quot;</span>, result);<br>    <span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里面用到了栈,所以我就去复习了一下栈,栈和链表之前都只是看过up主的视频了解过工作原理.<br>在那之后其实并没有使用过这些数据结构.</p><p>首先是栈,链表的话等更新成绩管理模块吧,成绩管理模块人员的增删用到链表的话会很方便.<br>下面写一个简单的代码了解一下栈.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>//定义一个结构体得放在使用这个结构体定义变量之前<br>//否则会出现要求给完整定义的错误,别问我怎么知道. <br>struct <span class="hljs-built_in">test</span><br>&#123;<br>int container[3];<br>int top; <br>&#125;;<br><br>//入栈操作 <br>void push(struct <span class="hljs-built_in">test</span> *s,int e)<br>&#123;<br><span class="hljs-keyword">if</span>(s-&gt;top == 2)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;栈已满,入栈失败&quot;</span>);<br><span class="hljs-built_in">return</span>; <br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>s-&gt;top ++;<br>s-&gt;container[s-&gt;top] = e;<br><span class="hljs-built_in">return</span>; <br>&#125;<br>&#125;<br><br>//出栈操作 <br>int pop(struct <span class="hljs-built_in">test</span> *s)<br>&#123;<br><span class="hljs-keyword">if</span>(s-&gt;top == -1)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;栈以空,出栈失败&quot;</span>);<br><span class="hljs-built_in">return</span> 0; <br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>int top_num;<br>top_num = s-&gt;container[s-&gt;top];<br>s-&gt;top --;<br><span class="hljs-built_in">return</span> top_num;<br>&#125;<br>  <br>&#125; <br><br><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br><span class="hljs-built_in">test</span> zhan; <br>zhan.top = -1; <br>int num; <br>scanf(<span class="hljs-string">&quot;%d&quot;</span>,&amp;num) ;<br>push(&amp;zhan,num) ;<br>int num2;<br>num2 = pop(&amp;zhan);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,num2);<br><span class="hljs-built_in">return</span> 0; <br>&#125; <br></code></pre></td></tr></table></figure><p>然后是神奇豆包给的复杂计算机的实现代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;stdlib.h&gt;</span><br><span class="hljs-comment">#include &lt;string.h&gt;</span><br><span class="hljs-comment">#include &lt;ctype.h&gt;</span><br><br>// 定义栈结构体<br>typedef struct Stack &#123;<br>    double data[100];<br>    int top;<br>&#125; Stack;<br><br>// 初始化栈<br>void initStack(Stack *s) &#123;<br>    s-&gt;top = -1;<br>&#125;<br><br>// 入栈操作<br>void push(Stack *s, double num) &#123;<br>    s-&gt;top++;<br>    s-&gt;data[s-&gt;top] = num;<br>&#125;<br><br>// 出栈操作<br>double pop(Stack *s) &#123;<br>    <span class="hljs-keyword">if</span> (s-&gt;top == -1) &#123;<br>        <span class="hljs-built_in">return</span> 0;<br>    &#125;<br>    double num = s-&gt;data[s-&gt;top];<br>    s-&gt;top--;<br>    <span class="hljs-built_in">return</span> num;<br>&#125;<br><br>// 判断栈是否为空<br>int isEmpty(Stack *s) &#123;<br>    <span class="hljs-built_in">return</span> s-&gt;top == -1;<br>&#125;<br><br>// 计算函数<br>double calculate(double num1, char op, double num2) &#123;<br>    switch (op) &#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;+&#x27;</span>:<br>        <span class="hljs-built_in">return</span> num1 + num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;-&#x27;</span>:<br>        <span class="hljs-built_in">return</span> num1 - num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;*&#x27;</span>:<br>        <span class="hljs-built_in">return</span> num1 * num2;<br>    <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span>:<br>        <span class="hljs-keyword">if</span> (num2 == 0) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;除数不能为0！\n&quot;</span>);<br>            <span class="hljs-built_in">exit</span>(1);<br>        &#125;<br>        <span class="hljs-built_in">return</span> num1 / num2;<br>    default:<br>        <span class="hljs-built_in">return</span> 0;<br>    &#125;<br>&#125;<br><br>// 获取操作数的优先级<br>int getPriority(char op) &#123;<br>    <span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;*&#x27;</span> || op == <span class="hljs-string">&#x27;/&#x27;</span>) &#123;<br>        <span class="hljs-built_in">return</span> 2;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (op == <span class="hljs-string">&#x27;+&#x27;</span> || op == <span class="hljs-string">&#x27;-&#x27;</span>) &#123;<br>        <span class="hljs-built_in">return</span> 1;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">return</span> 0;<br>    &#125;<br>&#125;<br><br>// 计算表达式<br>double evalExpression(char *expression) &#123;<br>    Stack numStack;<br>    Stack opStack;<br>    initStack(&amp;numStack);<br>    initStack(&amp;opStack);<br><br>    int i = 0;<br>    int len = strlen(expression);<br>    <span class="hljs-keyword">while</span> (i &lt; len) &#123;<br>        <span class="hljs-keyword">if</span> (isdigit(expression[i])) &#123;<br>            double num = 0;<br>            <span class="hljs-keyword">while</span> (isdigit(expression[i])) &#123;<br>                num = num * 10+(expression[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br>                i++;<br>            &#125;<br>            push(&amp;numStack, num);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (expression[i] == <span class="hljs-string">&#x27;(&#x27;</span>) &#123;<br>            push(&amp;opStack, expression[i]);<br>            i++;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (expression[i] == <span class="hljs-string">&#x27;)&#x27;</span>) &#123;<br>            <span class="hljs-keyword">while</span> (!isEmpty(&amp;opStack) &amp;&amp; opStack.data[opStack.top]!= <span class="hljs-string">&#x27;(&#x27;</span>) &#123;<br>                double num2 = pop(&amp;numStack);<br>                double num1 = pop(&amp;numStack);<br>                char op = pop(&amp;opStack);<br>                double result = calculate(num1, op, num2);<br>                push(&amp;numStack, result);<br>            &#125;<br>            pop(&amp;opStack);<br>            i++;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            char op = expression[i];<br>            <span class="hljs-keyword">while</span> (!isEmpty(&amp;opStack) &amp;&amp; getPriority(op) &lt;= getPriority(opStack.data[opStack.top])) &#123;<br>                double num2 = pop(&amp;numStack);<br>                double num1 = pop(&amp;numStack);<br>                char op1 = pop(&amp;opStack);<br>                double result = calculate(num1, op1, num2);<br>                push(&amp;numStack, result);<br>            &#125;<br>            push(&amp;opStack, op);<br>            i++;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">while</span> (!isEmpty(&amp;opStack)) &#123;<br>        double num2 = pop(&amp;numStack);<br>        double num1 = pop(&amp;numStack);<br>        char op = pop(&amp;opStack);<br>        double result = calculate(num1, op, num2);<br>        push(&amp;numStack, result);<br>    &#125;<br><br>    <span class="hljs-built_in">return</span> pop(&amp;numStack);<br>&#125;<br><br><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>() &#123;<br>    char expression[100];<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入表达式：&quot;</span>);<br>    scanf(<span class="hljs-string">&quot;%s&quot;</span>, expression);<br>    double result = evalExpression(expression);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;结果为：%.2lf\n&quot;</span>, result);<br>    <span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>也是研究了好久,学到了很多.<br>基础功能达标,但有些人很调皮,喜欢在数字和运算符之间加点空格,比如我.<br>这个代码不具有跳过空格的能力,所以得加个识别字符的函数.<br>计算模块思路搞定,只等有时间给代码写出来就大功告成.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">void 识别字符 (strcut <span class="hljs-built_in">test</span> *p)<br>&#123;<br>     <span class="hljs-keyword">if</span>(p-&gt;container[p-&gt;top] == <span class="hljs-string">&#x27; &#x27;</span>)<br>     &#123;<br>          s-&gt;top ++;<br>          <span class="hljs-built_in">return</span>;<br>     &#125;<br>     <span class="hljs-built_in">return</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>计算机模块快了.<br>接下来就轮到成绩管理模块的链表了了.</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言</tag>
      
      <tag>大作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>大作业进度-1</title>
    <link href="/2024/12/15/%E5%A4%A7%E4%BD%9C%E4%B8%9A%E8%BF%9B%E5%BA%A6-1/"/>
    <url>/2024/12/15/%E5%A4%A7%E4%BD%9C%E4%B8%9A%E8%BF%9B%E5%BA%A6-1/</url>
    
    <content type="html"><![CDATA[<p>大作业总结进度:</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;time.h&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">house_score</span><span class="hljs-params">(<span class="hljs-type">long</span> <span class="hljs-type">long</span> in_xuehao)</span></span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;声明:因系统制作组学艺不精!请保证每次输入后只按一次回车键!否则回车符堆积缓冲区会造成系统运行出错!\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;知悉后按下任意键运行系统.&quot;</span>);<br><span class="hljs-built_in">getchar</span>();                            <span class="hljs-comment">//程序运行到</span><br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-comment">//-----------------------获取时间的操作</span><br><br><span class="hljs-type">time_t</span> current_time = <span class="hljs-built_in">time</span>(<span class="hljs-literal">NULL</span>);<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">tm</span>* BJH = <span class="hljs-built_in">localtime</span>(&amp;current_time);<br><span class="hljs-type">int</span> year = BJH-&gt;tm_year + <span class="hljs-number">1900</span>;               <span class="hljs-comment">//BJH-&gt;tm_year  得到tm 结构体中1990年到现在经过了多少时间.</span><br><span class="hljs-type">int</span> month = BJH-&gt;tm_mon + <span class="hljs-number">1</span>;               <span class="hljs-comment">// tm结构体中 mon 存储的月份只有 0 - 11,所以+1.</span><br><span class="hljs-type">int</span> day = BJH-&gt;tm_mday;<br><span class="hljs-type">int</span> hour = BJH-&gt;tm_hour;<br><span class="hljs-type">int</span> min = BJH-&gt;tm_min;<br><span class="hljs-type">int</span> sec = BJH-&gt;tm_sec;<br><br><span class="hljs-comment">//------------------------设置界面存储操作的变量.</span><br><span class="hljs-type">char</span> game = <span class="hljs-string">&#x27;1&#x27;</span>;<br><span class="hljs-type">char</span> score = <span class="hljs-string">&#x27;2&#x27;</span>;<br><span class="hljs-type">char</span> computer = <span class="hljs-string">&#x27;3&#x27;</span>;<br><span class="hljs-type">char</span> setting = <span class="hljs-string">&#x27;4&#x27;</span>;<br><span class="hljs-type">char</span> set_mima = <span class="hljs-string">&#x27;5&#x27;</span>;<br><br><span class="hljs-comment">//-----------------------比较重要的几个变量</span><br><br><span class="hljs-type">char</span> input;           <span class="hljs-comment">//接收用户输入.</span><br><br><span class="hljs-comment">//---------------------------------------密码变量</span><br><br><span class="hljs-type">char</span> true_mima[<span class="hljs-number">20</span>] = <span class="hljs-string">&quot;123456&quot;</span>;<br><span class="hljs-type">char</span> input_mima[<span class="hljs-number">20</span>];<br><span class="hljs-type">int</span> mark_mima = <span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> mark_cishu = <span class="hljs-number">0</span>;<br><br><span class="hljs-comment">//----------------------------------------------密码检测模块</span><br><br>YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == <span class="hljs-number">3</span>)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入您的%d位数密码(您还剩%d次机会):&quot;</span>, <span class="hljs-built_in">strlen</span>(true_mima), <span class="hljs-number">3</span> - mark_cishu);<br><span class="hljs-built_in">fgets</span>(input_mima, <span class="hljs-built_in">strlen</span>(true_mima) + <span class="hljs-number">1</span>, stdin);<span class="hljs-comment">//fgets 会吃一个回车符,所以+1.</span><br><span class="hljs-comment">//printf(&quot; % c&quot;, input_mima[5]);</span><br>mark_mima = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">strlen</span>(true_mima); i++)<br>&#123;<br><span class="hljs-keyword">if</span> (true_mima[i] != input_mima[i])<br>&#123;<br><span class="hljs-built_in">getchar</span>();<br>mark_mima = <span class="hljs-number">1</span>;<br>mark_cishu++;<br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密码错误!&quot;</span>);<br><span class="hljs-keyword">goto</span> YXL;<br>&#125;<br>&#125;<br><span class="hljs-comment">//printf(&quot;%d,%d&quot;, strlen(true_mima), strlen(input_mima));</span><br><span class="hljs-keyword">if</span> (mark_mima == <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">strlen</span>(true_mima) == <span class="hljs-built_in">strlen</span>(input_mima))<br>&#123;<br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;欢迎回来!\n(按下任意键进入...)&quot;</span>);<br><span class="hljs-built_in">getchar</span>();<span class="hljs-comment">//输入的时候留了一个回车没吃在缓冲区,现在吃</span><br><span class="hljs-built_in">getchar</span>();<span class="hljs-comment">//执行到此处时程序停止,等待用户输入再执行下面清屏的操作.</span><br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br><br><span class="hljs-comment">//------------------------------------------------------------------------主界面</span><br><br><br>mark_dasktop:<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;//----------------------------------------------------------------------------------------------------\\\\\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||----------------------------------------------------------------------------------------------------||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;|| 小组成员:BJH.YXL                                                                                   ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c开始小游戏.                                                            ||\n&quot;</span>, game);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c进入查询成绩.                                                          ||\n&quot;</span>, score);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c使用计算机.                                                            ||\n&quot;</span>, computer);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c调整设置.                                                              ||\n&quot;</span>, setting);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                          按%c修改密码.                                                              ||\n&quot;</span>, set_mima);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                                    ||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||                                                                                    %d/%d/%d/%d/%d||\n&quot;</span>, year, month, day, hour, min);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;||----------------------------------------------------------------------------------------------------||\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\\\\----------------------------------------------------------------------------------------------------//\n&quot;</span>);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;执行操作(按下O关闭电脑):&quot;</span>);<br><br><span class="hljs-comment">//--------------------------------------指令输入以及错误指令预防</span><br><span class="hljs-type">int</span> mark_misinput = <span class="hljs-number">0</span>;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%c&quot;</span>, &amp;input);<br><span class="hljs-keyword">while</span> (input != game &amp;&amp; input != score &amp;&amp; input != computer &amp;&amp; input != setting &amp;&amp; input != set_mima)<br>&#123;<br><br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">getchar</span>();<br>mark_misinput++;<br><span class="hljs-keyword">if</span> (mark_misinput == <span class="hljs-number">10</span>)<br>&#123;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;非有效指令!如果想关闭电脑请按下O\n程序将在本次运行共计输入十次错误指令后自动结束运行!(当前错误次数:%d)\n&quot;</span>, mark_misinput);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;执行操作:&quot;</span>);<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%c&quot;</span>, &amp;input);<br><span class="hljs-keyword">if</span> (input == <span class="hljs-string">&#x27;O&#x27;</span>)<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">//------------------------------------------交派模块运行指令</span><br><br><span class="hljs-keyword">if</span> (input == game)<br>&#123;<br><span class="hljs-keyword">goto</span> mark_game;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == score)<br>&#123;<br><span class="hljs-keyword">goto</span> mark_score;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == computer)<br>&#123;<br><span class="hljs-keyword">goto</span> mark_computer;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == setting)<br>&#123;<br><span class="hljs-keyword">goto</span> mark_setting;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (input == set_mima)<br>&#123;<br><span class="hljs-keyword">goto</span> mark_set_mima;<br>&#125;<br><br><span class="hljs-comment">//---------------------------------------------游戏模块预留区域</span><br><span class="hljs-keyword">if</span> (<span class="hljs-number">0</span>)<br>&#123;<br>mark_game:<br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;游戏\n&quot;</span>);<br><span class="hljs-comment">//----------------</span><br><br><br><span class="hljs-built_in">srand</span>((<span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>)<span class="hljs-built_in">time</span>(<span class="hljs-literal">NULL</span>));<br><span class="hljs-type">int</span> answer = (<span class="hljs-built_in">rand</span>() % <span class="hljs-number">100</span>) + <span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> i;<br><span class="hljs-type">int</span> a = <span class="hljs-number">1</span>;<br><span class="hljs-type">int</span> b = <span class="hljs-number">100</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[1，100]的数字：&quot;</span>);<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br><span class="hljs-keyword">if</span> (i &lt; a || i&gt; b)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;不玩算了!&quot;</span>);<br><span class="hljs-keyword">goto</span> mark_dasktop;<br>&#125;<br><span class="hljs-keyword">while</span> (i != answer)<br>&#123;<br><br><span class="hljs-keyword">if</span> (i &gt; answer &amp;&amp; i &gt;= a &amp;&amp; i &lt;= b)<br>&#123;<br>b = i;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[%d，%d]的数字(输入区间以外数字返回桌面)：&quot;</span>, a, i);<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br><span class="hljs-keyword">if</span> (i == answer)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恭喜你，猜中啦！\n(按下任意键回到桌面)&quot;</span>);<br><span class="hljs-built_in">getchar</span>();<br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-keyword">goto</span> mark_dasktop;<br><br><br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (i &lt; answer &amp;&amp; i &gt;= a &amp;&amp; i &lt;= b)<br>&#123;<br>a = i;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[%d，%d]的数字(输入区间以外数字返回桌面)：&quot;</span>, i, b);<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br><span class="hljs-keyword">if</span> (i == answer)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恭喜你，猜对啦!&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;cls&quot;</span>);<br><span class="hljs-keyword">goto</span> mark_dasktop;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-comment">//---------------------------------------------成绩模块预留区域</span><br><span class="hljs-keyword">if</span> (<span class="hljs-number">0</span>)<br>&#123;<br>mark_score:<br><span class="hljs-built_in">house_score</span>(<span class="hljs-number">123</span>);<br><br>&#125;<br><span class="hljs-comment">//---------------------------------------------计算模块预留区域</span><br><span class="hljs-keyword">if</span> (<span class="hljs-number">0</span>)<br>&#123;<br>mark_computer:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;计算机&quot;</span>);<br>&#125;<br><span class="hljs-comment">//---------------------------------------------设置模块预留区域</span><br><span class="hljs-keyword">if</span> (<span class="hljs-number">0</span>)<br>&#123;<br>mark_setting:<br><br>&#125;<br><span class="hljs-comment">//---------------------------------------------密码模块预留区域</span><br><span class="hljs-keyword">if</span> (<span class="hljs-number">0</span>)<br>&#123;<br>mark_set_mima:<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;密码&quot;</span>);<br>&#125;<br><br><br><br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">//--------------------------------------成绩查询模块 </span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">house_score</span><span class="hljs-params">(<span class="hljs-type">long</span> <span class="hljs-type">long</span> in_xuehao)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">instruction</span><br>&#123;<br><span class="hljs-type">char</span> xuehao[<span class="hljs-number">11</span>];<br><span class="hljs-type">char</span> name[<span class="hljs-number">20</span>];<br><span class="hljs-type">int</span> score;<br>&#125;;<br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">instruction</span> xuesheng[<span class="hljs-number">10</span>] =<br>&#123;<br>&#123;<span class="hljs-string">&quot;2402060629&quot;</span>,<span class="hljs-string">&quot;BJH&quot;</span>,<span class="hljs-number">100</span>&#125;,<br>&#123;<span class="hljs-string">&quot;2402061111&quot;</span>,<span class="hljs-string">&quot;YXL&quot;</span>,<span class="hljs-number">100</span>&#125;,<br>&#123;<span class="hljs-string">&quot;2402060000&quot;</span>,<span class="hljs-string">&quot;Jack&quot;</span>,<span class="hljs-number">85</span>&#125;,<br>&#123;<span class="hljs-string">&quot;2402060001&quot;</span>,<span class="hljs-string">&quot;Amy&quot;</span>,<span class="hljs-number">37</span>&#125;,<br>&#123;<span class="hljs-string">&quot;2402060002&quot;</span>,<span class="hljs-string">&quot;Java&quot;</span>,<span class="hljs-number">0</span>&#125;,<br>&#123;<span class="hljs-string">&quot;2402060003&quot;</span>,<span class="hljs-string">&quot;Python&quot;</span>,<span class="hljs-number">0</span>&#125;,<br>&#123;<span class="hljs-string">&quot;2402050003&quot;</span>,<span class="hljs-string">&quot;Jeeny&quot;</span>,<span class="hljs-number">89</span>&#125;,<br>&#123;<span class="hljs-string">&quot;2402060004&quot;</span>,<span class="hljs-string">&quot;pettter&quot;</span>,<span class="hljs-number">34</span>&#125;,<br>&#123;<span class="hljs-string">&quot;2402060008&quot;</span>,<span class="hljs-string">&quot;mike&quot;</span>,<span class="hljs-number">99</span>&#125;,<br>&#123;<span class="hljs-string">&quot;2402060009&quot;</span>,<span class="hljs-string">&quot;haha&quot;</span>,<span class="hljs-number">60</span>&#125;<br>&#125;;<br>   <br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,xuesheng[<span class="hljs-number">0</span>].xuehao);<br><br>&#125;<br><span class="hljs-function"><span class="hljs-type">double</span> <span class="hljs-title">fun_computer</span> <span class="hljs-params">()</span> </span><br><span class="hljs-function"></span>&#123;<br> <br>&#125;<br></code></pre></td></tr></table></figure><p>自上次密码模块,这两天又补充了一点.<br>首先是利用printf打印出模拟电脑界面.<br>然就引入 time.h 头文件来显示时间.<br>然后就是一堆没有啥含金量的操作补充系统操作.<br>实际并没有什么实质性进展.</p><h2 id="接下来的几天的任务"><a href="#接下来的几天的任务" class="headerlink" title="接下来的几天的任务:"></a>接下来的几天的任务:</h2><h2 id="成绩管理系统"><a href="#成绩管理系统" class="headerlink" title="成绩管理系统."></a>成绩管理系统.</h2><p>计算机</p><p>考虑把成绩管理系统做的更加复杂.<br>主要还是接下来几天全心全意研究栈结构来做出功能更加强大的计算机系统.</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言</tag>
      
      <tag>大作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java面向对象</title>
    <link href="/2024/12/15/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-1/"/>
    <url>/2024/12/15/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-1/</url>
    
    <content type="html"><![CDATA[<p>面向对象化抽象为具体跟函数差不多感觉,就是你要建一个房子,首先你得打造一个锤子.<br>看了具体实现代码以后发现这就是 C 里面的结构体 struct 和 函数的结合.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class phone<br>&#123;<br>     string brand;<br>     double price;<br>     <br>     public void <span class="hljs-function"><span class="hljs-title">call</span></span>()<br>     &#123;<br>           System.out.println (<span class="hljs-string">&quot;手机在打电话&quot;</span>);<br>     &#125;<br>     public void game<br>     &#123;<br>           System.out.println (<span class="hljs-string">&quot;手机在打游戏&quot;</span>);<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这就是一个模板.<br>不能说一模一样,但是和 C 几乎一模一样了.<br>使用这个模板可以定义好多个新的结构体.<br>具体定义方法跟 C 一样:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">phone p = new phone ();<br><br>//包括给其中元素的赋值也是一样的.<br>p.brand = <span class="hljs-string">&quot;apple&quot;</span><br></code></pre></td></tr></table></figure><ul><li>总结:<br>类就是一个模板,对象就是拿着这个模板造了个工具起了个名字.<br>换成 C 来讲就是 类 &#x3D; 结构体 + 函数.</li></ul><p>至于封装,名字很抽象,其实就是如果你要写两个相关联的类,该把你想要执行的操作放在哪个模板类里面.<br>你要吃一块饼干.<br>定义两个类,一个是你,一个是饼干.饼干被吃掉这个操作封装在哪个类里面?<br>封装在饼干里面,你只是调用吃饼干的函数.</p><ul><li>总结:<br>放在被调用的类里面,谁被操作就把操作放在被操作的类里面.</li></ul><p>学到重点了.<br>原视频大概内容如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class GirlFriend<br>&#123;<br>     int age;<br>&#125;<br></code></pre></td></tr></table></figure><p>现在你定义了一个女朋友类,但其实这个类里面的数据是不安全的.<br>如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">GirlFriend Amy = new GirlFriend()<br>Amy.age = -18;<br></code></pre></td></tr></table></figure><p>你调用这个类创建了一个对象 Amy,你现在要给你的对象 Amy 的年纪进行赋值,<br>你输入 -18 语法没有错误,你不可能谈了个欠人家 18 岁的女孩子.<br>所以你得使用一些操作来为 age 保驾护航.</p><p>简单来说就是让用户执行的操作限制在一定范围呢,防止用户越界.<br>那上面的例子来讲,你需要在用户每次输入前检验一下输入是否合法.<br>可以改成以下这样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">GirlFriend Amy = new GirlFrien()<br>int a;<br>a = -18;<br><span class="hljs-keyword">if</span> ( a &gt; 0 ) <br>Amy.age = a<br></code></pre></td></tr></table></figure><p>但是如果你要给成百上千个变量赋值呢?你每个变量前都加一个 if 判断语句岂不是很繁琐.<br>就好像如果你想净化黄河的水,你在每个支流安装净水器不如直接在源头安装净水器.<br>实现的操作如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class GirlFriend<br>&#123;<br>     private int age;<br>     public void setAge( int a )<br>     &#123;<br>          <span class="hljs-keyword">if</span>(a &gt; = 18 &amp;&amp; a &lt;= 50)<br>          &#123;<br>               age =  a;<br>          &#125;<br>     &#125;<br>     <br>     public int <span class="hljs-function"><span class="hljs-title">getAge</span></span>()<br>     &#123;<br>         <span class="hljs-built_in">return</span> age;<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>这里就引出来重点了: private 和 public.<br>private 字面意思是私有的,这里可以简单的理解我们把 age 定义成了一个”私有的整型变量”.<br>用处就是只有在本类中才能调用这个变量,其他的类中都不能引用这个变量.<br>而 public 字面意思是公共的,意思就是所有的类里都可以引用的操作.<br>setAge 操作就是用来给 age 赋正确的值.<br>getAge 则是外界访问 age 的一个通道.<br>写那种数据量比较大的系统显得很方便.</p><p>有关于成员变量和局部变量.<br>换 C 来说就是函数里定义的变量和函数外定义的变量,学了 C 再学这个不要太简单.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class GirlFriend<br>&#123;<br>     private int age;<br>     public void <span class="hljs-function"><span class="hljs-title">method</span></span>()<br>     &#123;<br>          int age = 10;<br>          System.out.println(age);<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>就近原则,打印出来的 age 是离他最近的那个.<br>那如果方法里面的 int age 在打印操作的下一行呢?离他近但根据自上往下运行的操作应该是打印上面的.<br>不是很明白,去试试就知道了.</p><p>那问题来了,如果我们想使用方法外的 age ,也就是成员位置(方法外的变量是成员变量,方法里面是局部变量)的 age 该怎么办呢?<br>将 age 改成 this.age 就行了.<br>关于 this 的用法(一开始我觉得挺没用的,咱不能直接取俩名吗?然后感觉有点用…)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">public class GirlFriend<br>&#123;<br>     private int age;<br>     public void setAge( int age )<br>     &#123;<br>          <span class="hljs-keyword">if</span>(age &gt; = 18 &amp;&amp; age &lt;= 50)<br>          &#123;<br>               this.age = age;                //用处就是体现在这里,可以让我们少想一个与原来变量名有关联的变量名.<br>          &#125;<br>     &#125;<br>     <br>     public int <span class="hljs-function"><span class="hljs-title">getAge</span></span>()<br>     &#123;<br>         <span class="hljs-built_in">return</span> age;<br>     &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>学到这儿已经不打算学了,打算去写 C 的大作业,反正 C 的系统写完了直接照搬过来换成 java 又是一个项目.<br>然后课程的话明天水课再来看吧!</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>面向对象</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>密码模块详细搭建过程.</title>
    <link href="/2024/12/13/%E5%AF%86%E7%A0%81%E6%A8%A1%E5%9D%97%E8%AF%A6%E7%BB%86%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/"/>
    <url>/2024/12/13/%E5%AF%86%E7%A0%81%E6%A8%A1%E5%9D%97%E8%AF%A6%E7%BB%86%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>反应过来讲解的时候已经完成了,这里挑几个重点讲一下.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br><span class="hljs-comment">#include&lt;string.h&gt;</span><br><span class="hljs-comment">#include&lt;stdlib.h&gt;</span><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br>char true_mima [20] = <span class="hljs-string">&quot;123456&quot;</span>;  //初始化密码为123456.<br>char input_mima[20];                   //记录你的输入<br>int mark_mima = 0;                     //用于检验密码是否正确,将输入和密码一个个进行对比,有一个没对上就赋值为1<br>int mark_cishu = 0;                      //单纯记录输入密码的次数<br>YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == 3)<br>&#123;<br><span class="hljs-built_in">return</span> 0;                             //只给三次机会,再多就不给了!<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入密码(您还剩%d次机会):&quot;</span>, 3 - mark_cishu);    <br>fgets(input_mima, strlen(true_mima)+1,stdin);              //fgets 会吃一个回车符,所以+1.<br>//printf(<span class="hljs-string">&quot; % c&quot;</span>, input_mima[5]);                                    //这个是我用来检验最后一个字符是否成功读取,fgets太危险了.   <br><br><br><span class="hljs-keyword">for</span> (int i = 0; i &lt; strlen(true_mima);i++)<br>&#123;<br><span class="hljs-keyword">if</span> (true_mima[i] != input_mima[i])<br>&#123;<br> mark_mima = 1;<br> mark_cishu ++;<br> goto YXL;                   //检验到对不上的,不必多言,重新输入<br>&#125;<br>&#125;<br><br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d,%d&quot;</span>, strlen(true_mima), strlen(input_mima));  //用来检验前面的代码是否正确,后期删掉.<br><br><span class="hljs-keyword">if</span> (mark_mima == 0 &amp;&amp; strlen(true_mima) == strlen(input_mima))<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;欢迎回来!\n(按下任意键进入)&quot;</span>);<br>getchar();                    //执行到此处时程序停止,等待用户输入再执行下面清屏的操作.<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>&#125;<br><br><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (mark_mima == 1)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;输入错误!&quot;</span>);         //此处<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> 只是为了之前的检验,后面要删.<br>&#125;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>这个代码错误很多:<br>第 33 - 38 行代码实现的功能是由欢迎回来的界面转换到主界面,但是就算用户没有按下任意键也会执行清屏操作.<br>是因为系统没有执行 getchar() 吗?<br>不是,是因为前面我们按了一次回车,回车作为一个字符留在了缓冲区,在这里又进入了getchar()<br>至于为什么回车没有被读取而是停留在了缓冲区我也不知道,C语言在指针以及指针之后的内容我也只是了解.<br>fgets 的了解也只是会读取所有字符,包括回车,不过这种小问题不影响咱写这个模块,咱知道为啥出错就行.<br>至于为啥为啥出错咱不管他.(当然,如果后面继续深入研究了C的话我第一时间补上)<br>既然知道为什么出错了,解决方法就是写两个 getchar();</p><p>当然,如果你还是不懂,可以接着问我</p><p>修改之后就是这样了.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br><span class="hljs-comment">#include&lt;string.h&gt;</span><br><span class="hljs-comment">#include&lt;stdlib.h&gt;        //引入清屏操作system(&quot;cls&quot;)的头文件</span><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br>char true_mima [20] = <span class="hljs-string">&quot;123456&quot;</span>;  //初始化密码为123456.<br>char input_mima[20];                   //记录你的输入<br>int mark_mima = 0;                     //用于检验密码是否正确,将输入和密码一个个进行对比,有一个没对上就赋值为1<br>int mark_cishu = 0;                      //单纯记录输入密码的次数<br>YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == 3)<br>&#123;<br><span class="hljs-built_in">return</span> 0;                             //只给三次机会,再多就不给了!<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入密码(您还剩%d次机会):&quot;</span>, 3 - mark_cishu);    <br>fgets(input_mima, strlen(true_mima)+1,stdin);              //fgets 会吃一个回车符,所以+1.<br>//printf(<span class="hljs-string">&quot; % c&quot;</span>, input_mima[5]);                         //这个是我用来检验最后一个字符是否成功读取,fgets太危险了.后面就给删了.  <br><br><br><span class="hljs-keyword">for</span> (int i = 0; i &lt; strlen(true_mima);i++)<br>&#123;<br><span class="hljs-keyword">if</span> (true_mima[i] != input_mima[i])<br>&#123;<br> mark_mima = 1;<br> mark_cishu ++;<br> goto YXL;                   //检验到对不上的,不必多言,重新输入,去到 YXL 标记点开始执行.<br>&#125;<br>&#125;<br><br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d,%d&quot;</span>, strlen(true_mima), strlen(input_mima));  //用来检验前面的代码是否正确,后期删掉.<br><br><span class="hljs-keyword">if</span> (mark_mima == 0 &amp;&amp; strlen(true_mima) == strlen(input_mima))<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;欢迎回来!\n(按下任意键进入)&quot;</span>);<br>getchar(); <br>                getchar();   //执行到此处时程序停止,等待用户输入再执行下面清屏的操作.<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>&#125;<br><br><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (mark_mima == 1)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;输入错误!&quot;</span>);         //此处<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> 只是为了之前的检验,后面要删.<br>&#125;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>对了,手机上的编译器引入头文件 stdlib.h 后可以认识 system(“clear”) 清屏操作,但是电脑上不认识.<br>问过神奇豆包了:</p><p>Linux 系统认识 clear,Windows 系统认识 cls</p><p>这个修改后的代码哪里错了呢?用写出来的话有点难讲,我尽力!<br>图来!</p><p><img src="/images/%E5%AF%86%E7%A0%81%E9%94%99%E8%AF%AF.png"></p><p>可以看到,第一次输入错误之后第二次直接给我跳过了!平白无故少一次输入机会,谁不生气?<br>这时候我就开始思考是为什么:<br>你看,第二次输入开始在哪?就在 fgets 那里.<br>如果你在脑中运行一遍代码,你就能发现错在哪了.<br>没错!你太聪明了!<br>问题就出在缓冲区的那个回车符,跟上面的问题一样,邪恶的回车符蛰伏在缓冲区等时机一到就给程序发动致命一击.</p><p>如果改成这样就不会少了输入次数了.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == 3)<br>&#123;<br><span class="hljs-built_in">return</span> 0;                             //只给三次机会,再多就不给了!<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入密码(您还剩%d次机会):&quot;</span>, 3 - mark_cishu); <br>        getchar();   <br>fgets(input_mima, strlen(true_mima)+1,stdin);  <br></code></pre></td></tr></table></figure><p>这样代码可以百分百保证你输入三次,因为正确密码他也说你错.<br>因为你第一次输入的时候 getchar 会偷吃第一个字符.<br>收回上面的话,刚刚想了一下第二次输入正确的或许可以,第二次执行时 getchar 吃了个回车.</p><p>那咱能不能改成这样:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == 3)<br>&#123;<br><span class="hljs-built_in">return</span> 0;                             //只给三次机会,再多就不给了!<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入密码(您还剩%d次机会):&quot;</span>, 3 - mark_cishu); <br>        <span class="hljs-keyword">if</span>(mark_mima == 1)<br>        getchar();   <br>fgets(input_mima, strlen(true_mima)+1,stdin);  <br></code></pre></td></tr></table></figure><p>嗯,第一次输入正确密码程序认出来了,第一次输入错误也不会出现上面的情况.<br>转折来了,只在第1次输入后吸收一次,那第二次呢?<br>所以我们改成:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == 3)<br>&#123;<br><span class="hljs-built_in">return</span> 0;                             //只给三次机会,再多就不给了!<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入密码(您还剩%d次机会):&quot;</span>, 3 - mark_cishu); <br>        <span class="hljs-keyword">if</span>(mark_mima == 1 || mark_mima == 2)<br>        getchar();   <br>fgets(input_mima, strlen(true_mima)+1,stdin);  <br></code></pre></td></tr></table></figure><p>这样就能吸收两次了!<br>考虑第一次输错第二次输入正确的情况吗?亦或是第一次,第二次都错,第三次对,<br>你会发现还是错的.(忘记具体为啥错了,想了一晚上好累,不想去想了,如果你想不明白的话我也可以把步骤一步一步写纸上拍给你)<br>我们只需要在输入错误时马上把缓冲区的回车给吃掉就行,所以成品出来.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br><span class="hljs-comment">#include&lt;string.h&gt;</span><br><span class="hljs-comment">#include&lt;stdlib.h&gt;        //引入清屏操作system(&quot;cls&quot;)的头文件</span><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br>char true_mima [20] = <span class="hljs-string">&quot;123456&quot;</span>;  //初始化密码为123456.<br>char input_mima[20];                   //记录你的输入<br>int mark_mima = 0;                     //用于检验密码是否正确,将输入和密码一个个进行对比,有一个没对上就赋值为1<br>int mark_cishu = 0;                      //单纯记录输入密码的次数<br>YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == 3)<br>&#123;<br><span class="hljs-built_in">return</span> 0;                             //只给三次机会,再多就不给了!<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入密码(您还剩%d次机会):&quot;</span>, 3 - mark_cishu);    <br>fgets(input_mima, strlen(true_mima)+1,stdin);              //fgets 会吃一个回车符,所以+1.<br>//printf(<span class="hljs-string">&quot; % c&quot;</span>, input_mima[5]);                         //这个是我用来检验最后一个字符是否成功读取,fgets太危险了.后面就给删了.  <br><br><br><span class="hljs-keyword">for</span> (int i = 0; i &lt; strlen(true_mima);i++)<br>&#123;<br><span class="hljs-keyword">if</span> (true_mima[i] != input_mima[i])<br>&#123;<br>                         getchar();                      //&lt;-----------------------这儿这儿.<br> mark_mima = 1;<br> mark_cishu ++;<br> goto YXL;                   //检验到对不上的,不必多言,重新输入,去到 YXL 标记点开始执行.<br>&#125;<br>&#125;<br><br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d,%d&quot;</span>, strlen(true_mima), strlen(input_mima));  //用来检验前面的代码是否正确,后期删掉.<br><br><span class="hljs-keyword">if</span> (mark_mima == 0 &amp;&amp; strlen(true_mima) == strlen(input_mima))<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;欢迎回来!\n(按下任意键进入)&quot;</span>);<br>getchar(); <br>                getchar();   //执行到此处时程序停止,等待用户输入再执行下面清屏的操作.<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>&#125;<br><br><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (mark_mima == 1)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;输入错误!&quot;</span>);         //此处<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> 只是为了之前的检验,后面要删.<br>&#125;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>写的源代码运行没发现错误,这个代码可能再修改过程中改错了,应该是没错的.<br>(我是将完全代码修改成错误代码在复制过来再添加注释的,然后再在这个基础上补充,所以可能会又偏差,错了讲一下我改一下就ok)<br>有没有可能我自认为的完全代码还有不为人知的错误?<br>密码模块进度:75%.</p><p>12.14修改.<br>今天早上本来打算把改改密码的功能给他实现了,然后运行了一遍代码,发现错误了.</p><p>代码第二次第三次输入正确会直接进入到最后一个 printf(“输入错误”);<br>说明正确的密码被正确读取了.(因为通过了这一部分的检验):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> (int i = 0; i &lt; strlen(true_mima);i++)<br>&#123;<br><span class="hljs-keyword">if</span> (true_mima[i] != input_mima[i])<br>&#123;<br>                         getchar();                      //&lt;-----------------------这儿这儿.<br> mark_mima = 1;<br> mark_cishu ++;<br> goto YXL;                   //检验到对不上的,不必多言,重新输入,去到 YXL 标记点开始执行.<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>所以每个元素都是对上的.<br>所以我们再开 printf 的条件就能知道错在第一次输入错误时 mark_mima 被标记为了1,所以我们只需要每次对比密码时重新赋值为0就行了.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br><span class="hljs-comment">#include&lt;string.h&gt;</span><br><span class="hljs-comment">#include&lt;stdlib.h&gt;        //引入清屏操作system(&quot;cls&quot;)的头文件</span><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br>char true_mima [20] = <span class="hljs-string">&quot;123456&quot;</span>;  //初始化密码为123456.<br>char input_mima[20];                   //记录你的输入<br>int mark_mima = 0;                     //用于检验密码是否正确,将输入和密码一个个进行对比,有一个没对上就赋值为1<br>int mark_cishu = 0;                      //单纯记录输入密码的次数<br>YXL:<br><span class="hljs-keyword">if</span> (mark_cishu == 3)<br>&#123;<br><span class="hljs-built_in">return</span> 0;                             //只给三次机会,再多就不给了!<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入密码(您还剩%d次机会):&quot;</span>, 3 - mark_cishu);    <br>fgets(input_mima, strlen(true_mima)+1,stdin);              //fgets 会吃一个回车符,所以+1.<br>//printf(<span class="hljs-string">&quot; % c&quot;</span>, input_mima[5]);                         //这个是我用来检验最后一个字符是否成功读取,fgets太危险了.后面就给删了.  <br><br>        mark_mima = 0;<br><br><span class="hljs-keyword">for</span> (int i = 0; i &lt; strlen(true_mima);i++)<br>&#123;<br><span class="hljs-keyword">if</span> (true_mima[i] != input_mima[i])<br>&#123;<br>                         getchar();                      //&lt;-----------------------这儿这儿.<br> mark_mima = 1;<br> mark_cishu ++;<br> goto YXL;                   //检验到对不上的,不必多言,重新输入,去到 YXL 标记点开始执行.<br>&#125;<br>&#125;<br><br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d,%d&quot;</span>, strlen(true_mima), strlen(input_mima));  //用来检验前面的代码是否正确,后期删掉.<br><br><span class="hljs-keyword">if</span> (mark_mima == 0 &amp;&amp; strlen(true_mima) == strlen(input_mima))<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;欢迎回来!\n(按下任意键进入)&quot;</span>);<br>getchar(); <br>                getchar();   //执行到此处时程序停止,等待用户输入再执行下面清屏的操作.<br>system(<span class="hljs-string">&quot;cls&quot;</span>);<br>&#125;<br><br><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (mark_mima == 1)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;输入错误!&quot;</span>);         //此处<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> 只是为了之前的检验,后面要删.<br>&#125;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C期末大作业</title>
    <link href="/2024/12/13/C%E6%9C%9F%E6%9C%AB%E5%A4%A7%E4%BD%9C%E4%B8%9A2024.12.13/"/>
    <url>/2024/12/13/C%E6%9C%9F%E6%9C%AB%E5%A4%A7%E4%BD%9C%E4%B8%9A2024.12.13/</url>
    
    <content type="html"><![CDATA[<h2 id="密码模块-功能-核对用户输入-修改密码-具体实现构想-核对用户输入-利用-for-循环遍历存储输入的数组和存储密码的数组-对比每个元素-若有元素对比失败-返回密码错误-修改密码-输入特定值时通过-goto-进入-while-循环-其中使用-scanf-返回值特性来接收正确输入。"><a href="#密码模块-功能-核对用户输入-修改密码-具体实现构想-核对用户输入-利用-for-循环遍历存储输入的数组和存储密码的数组-对比每个元素-若有元素对比失败-返回密码错误-修改密码-输入特定值时通过-goto-进入-while-循环-其中使用-scanf-返回值特性来接收正确输入。" class="headerlink" title="密码模块:   功能: 核对用户输入,修改密码.   具体实现构想:   核对用户输入:利用 for 循环遍历存储输入的数组和存储密码的数组,对比每个元素,若有元素对比失败,返回密码错误.    修改密码:输入特定值时通过 goto 进入 while 循环,其中使用 scanf 返回值特性来接收正确输入。"></a>密码模块:<br>   功能: 核对用户输入,修改密码.<br>   具体实现构想:<br>   核对用户输入:利用 for 循环遍历存储输入的数组和存储密码的数组,对比每个元素,若有元素对比失败,返回密码错误.<br>    修改密码:输入特定值时通过 goto 进入 while 循环,其中使用 scanf 返回值特性来接收正确输入。</h2><h2 id="主界面-功能-提供选项-接收用户需求并引用其他功能模块-具体实现构想-提供选项-printf-函数打印所有可能选项-多个-printf-打印界面-满足需求-通过-switch-函数比对用户输入进入对应函数"><a href="#主界面-功能-提供选项-接收用户需求并引用其他功能模块-具体实现构想-提供选项-printf-函数打印所有可能选项-多个-printf-打印界面-满足需求-通过-switch-函数比对用户输入进入对应函数" class="headerlink" title="主界面:   功能: 提供选项,接收用户需求并引用其他功能模块.   具体实现构想:   提供选项:   printf 函数打印所有可能选项.   多个 printf 打印界面.   满足需求:   通过 switch 函数比对用户输入进入对应函数."></a>主界面:<br>   功能: 提供选项,接收用户需求并引用其他功能模块.<br>   具体实现构想:<br>   提供选项:<br>   printf 函数打印所有可能选项.<br>   多个 printf 打印界面.<br>   满足需求:<br>   通过 switch 函数比对用户输入进入对应函数.</h2><h2 id="其他功能模块-小游戏模块-计算机模块-成绩查询模块-设置-小游戏模块-定义-game-函数-其中装载小游戏"><a href="#其他功能模块-小游戏模块-计算机模块-成绩查询模块-设置-小游戏模块-定义-game-函数-其中装载小游戏" class="headerlink" title="其他功能模块:   小游戏模块,计算机模块,成绩查询模块,设置.   小游戏模块:   定义 game 函数,其中装载小游戏."></a>其他功能模块:<br>   小游戏模块,计算机模块,成绩查询模块,设置.<br>   小游戏模块:<br>   定义 game 函数,其中装载小游戏.</h2><h2 id="计算机模块-构想1-简单的两个数字加减乘除-char变量存储运算符-构想2-多个数字加减乘除（-char-类型-input-数组存储用户输入-int-类型-mark-数组只存储-0-1-标记数字是否被使用-mark-数组初始化-0-一旦对应数字被使用-该-mark-数组元素赋值为1-表示该数字已被使用-防止重复运算-遍历-input-数组-优先计算×÷）-功能不算很强-实现有点复杂"><a href="#计算机模块-构想1-简单的两个数字加减乘除-char变量存储运算符-构想2-多个数字加减乘除（-char-类型-input-数组存储用户输入-int-类型-mark-数组只存储-0-1-标记数字是否被使用-mark-数组初始化-0-一旦对应数字被使用-该-mark-数组元素赋值为1-表示该数字已被使用-防止重复运算-遍历-input-数组-优先计算×÷）-功能不算很强-实现有点复杂" class="headerlink" title="   计算机模块:   构想1:   简单的两个数字加减乘除,char变量存储运算符.   构想2:   多个数字加减乘除（ char 类型 input 数组存储用户输入,int 类型 mark 数组只存储 0 &amp; 1 标记数字是否被使用.mark 数组初始化 0 ,一旦对应数字被使用,该 mark 数组元素赋值为1,表示该数字已被使用,防止重复运算.遍历 input 数组,优先计算×÷）   功能不算很强,实现有点复杂."></a>   计算机模块:<br>   构想1:<br>   简单的两个数字加减乘除,char变量存储运算符.<br>   构想2:<br>   多个数字加减乘除（ char 类型 input 数组存储用户输入,int 类型 mark 数组只存储 0 &amp; 1 标记数字是否被使用.mark 数组初始化 0 ,一旦对应数字被使用,该 mark 数组元素赋值为1,表示该数字已被使用,防止重复运算.遍历 input 数组,优先计算×÷）<br>   功能不算很强,实现有点复杂.</h2><h2 id="设置模块-根据用户喜好调整键位-开启-关闭某些模块的调用权限（隐藏-开启模块）"><a href="#设置模块-根据用户喜好调整键位-开启-关闭某些模块的调用权限（隐藏-开启模块）" class="headerlink" title="设置模块:   根据用户喜好调整键位.开启&#x2F;关闭某些模块的调用权限（隐藏&#x2F;开启模块）"></a>设置模块:<br>   根据用户喜好调整键位.开启&#x2F;关闭某些模块的调用权限（隐藏&#x2F;开启模块）</h2><h2 id="成绩查询-使用结构体存储一些学生的成绩-输入名称查询各科成绩和总成绩以及排名-进入教师查询所有人成绩以及密码后打印表格-包含所有人的成绩-添加老师专属成绩录入系统-平均分-排名功能"><a href="#成绩查询-使用结构体存储一些学生的成绩-输入名称查询各科成绩和总成绩以及排名-进入教师查询所有人成绩以及密码后打印表格-包含所有人的成绩-添加老师专属成绩录入系统-平均分-排名功能" class="headerlink" title="成绩查询:   使用结构体存储一些学生的成绩,输入名称查询各科成绩和总成绩以及排名.   进入教师查询所有人成绩以及密码后打印表格,包含所有人的成绩.   (添加老师专属成绩录入系统,,平均分,排名功能)."></a>成绩查询:<br>   使用结构体存储一些学生的成绩,输入名称查询各科成绩和总成绩以及排名.<br>   进入教师查询所有人成绩以及密码后打印表格,包含所有人的成绩.<br>   (添加老师专属成绩录入系统,,平均分,排名功能).</h2>]]></content>
    
    
    <categories>
      
      <category>作业</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>C语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>java笔记.</title>
    <link href="/2024/12/12/java%E7%AC%94%E8%AE%B02024-12-12/"/>
    <url>/2024/12/12/java%E7%AC%94%E8%AE%B02024-12-12/</url>
    
    <content type="html"><![CDATA[<p>老师说第一门语言最好学C,因为C比较基础.之前不以为然,学了 C++ 后感觉 C++ 的打印没有C简洁,用两种语言写代码可能第一眼看过去会感觉C语言会更加整洁.<br>现在学了java之后这种感觉更深刻了,Java的打印是:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">System.out.println( );<br></code></pre></td></tr></table></figure><p>特别是一些场景不如C语言:想要输出”请输入一个在(a,b)之间的数字:”.<br>C:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在(%d,%d)之间的数字&quot;</span>,a,b);<br></code></pre></td></tr></table></figure><p>java:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">System.out.println(<span class="hljs-string">&quot;请输入一个在(&quot;</span> + a + <span class="hljs-string">&quot;,&quot;</span> + b + <span class="hljs-string">&quot;)之间的数字:&quot;</span>);<br></code></pre></td></tr></table></figure><p>显然 C 语言更加简便,<br>又如 C 中的 scanf 函数同其他许多函数被包含在了 &lt;stdio.h&gt; 头文件中,使用很方便.<br>如给一个变量赋值:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">scanf (<span class="hljs-string">&quot;%d&quot;</span>,&amp;a);<br></code></pre></td></tr></table></figure><p>而在Java中:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">import java.util.Scanner //引入 Scanner 函数<br>Scanner <span class="hljs-keyword">in</span> = new Scanner(System.<span class="hljs-keyword">in</span>); //告诉电脑:我待会要用 Scanner 函数了嗷.(其中Scanner <span class="hljs-keyword">in</span> 中的 <span class="hljs-keyword">in</span> 是可以更改的,怎么喜欢怎么来,换成a,b....都行)<br>int i= in.nextInt();<br></code></pre></td></tr></table></figure><p>对于习惯了 C 语言的直接 scanf 的我来说非常不习惯.</p><p>其中最不习惯的当属 Java 时不时就要字母大写!气死我啦!</p><p><img src="/images/%E8%B8%A2%E9%A3%9EJAVA.png"></p><p>没错!我需要时间去适应Java.</p><p>不难看出, Java 比之 C 更加复杂.可能就是因为 java 更加严密所以漏洞更少?</p><p>进入正题.<br>java 的数据类型和 C 差不多,只不过多了个 byte(一个字节) 和 boolean(只用来存储 true 和 false) .</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">long a = 1234567890; //在 IntelliJ IDEA 2024.3.1 中不会报错,但当 long 类型的数据存储的数值大于十位数时,必须在数字末尾加上 L.<br>long a = 12345678901L; // L 不分大小写,但是 l 和 1 很像,建议大写.<br></code></pre></td></tr></table></figure><p>同理,double 类型的数据在超过10个长度时也需要在末尾加上D.float 类型在超过10个长度时在末尾加上F.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">double a = 12345678901D;<br><span class="hljs-built_in">float</span> a = 12345678901F;<br></code></pre></td></tr></table></figure><p>然后就是关于隐式转换(自动类型提升)和强制转换的知识了:<br>在两种不同类型的数据进行相加时,如:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">int a = 11;<br><span class="hljs-built_in">float</span> b = 11.11;<br>? c = a + b; <br></code></pre></td></tr></table></figure><p>相信学过C语言的同学对这个都很了解了,根据隐式转换规则:取值范围小的数据类型转换为取值范围大的数据类型.所以 c 就是 double 类型.<br>其中: byte &lt; short &lt; int &lt; long &lt; float &lt; double.</p><p>隐式转换的第二种:byte,short,char 三种数据类型在运算时会转换成 int 类型再进行计算.(其中 char 类型转变为 int 类型后的值参照 ASCLL表.)</p><p>对于强制转换,就是强行将一个数据的类型转换为另一种类型.毕竟强扭的瓜不甜,所以一般用不上.</p><p>java的逻辑运算符:<br>&#x3D;&#x3D; 和 ! 同 C 一般,不必多言.其中 | ,&amp; 和 &amp;&amp;,|| 大有门道.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">int a = 1;<br>int b = 2;<br><span class="hljs-keyword">if</span>(a == 1 | b == 2)<br>&#123;         <br>     System.out.println(<span class="hljs-string">&quot;这就很棒!&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>只要 a &#x3D; 1 或者 b &#x3D; 2 屏幕上就会打印 “这太棒了!”<br>上述代码具体内部的判断流程如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">a == 1 正确,返回 <span class="hljs-literal">true</span>;<br>接着:<br>b == 2 正确,返回 <span class="hljs-literal">true</span>;<br></code></pre></td></tr></table></figure><p>作为正常人,不难看出明明只要 a &#x3D;&#x3D; 1 返回 true 下面的操作就可以立即执行了,不需要再去判断 b &#x3D;&#x3D; 2 是否成立.<br>于是,伟大的某人发明了 || 和 &amp;&amp;,又称”短路逻辑运算符”.<br>相信 | , &amp; 和 &amp;&amp; , || 的区别大家都明白了,总结 : Java 没有 | 和 &amp;,只有 || 和 &amp;&amp;.当然,逻辑运算符的运用还得看具体情况.</p><p> java 的三种结构-顺序-循环-分支同 C 一般.<br>if 语句,if-else 语句,if-else if-else 语句,for 循环,switch 语句的语法和 C 一模一样;<br>出于严谨,我去问了神奇豆包,他的回答很强大.<br>于是我在CSDN上找了一篇文章.</p><p><a href="tps://blog.csdn.net/Easonmax/article/details/136438527?sharetype=blog&shareId=136438527&sharerefer=APP&sharesource=2403_87829447&sharefrom=link">点击此处跳转</a></p><p>总结下来:在大多数时候都能看成 C.</p><p>java 的数组:<br>java 中定义一个数组有两种形式 :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">第一种:<br>int [] array;<br>第二种:<br>int array[];<br></code></pre></td></tr></table></figure><p>一种时Java特有的,一种和 C 一样.第二种看着亲切一点.<br>很巧的是,数组的初始化也有两种:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">完整格式:<br>int [] array = new int[] &#123;1,2,3&#125;;<br>简化格式:<br>int [] array = &#123;1,2,3&#125;;<br></code></pre></td></tr></table></figure><p>还是第二种更亲切.</p><p>关于数组的存储地址,Java 和 C 只能说类似吧.<br>在 C 中:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">int woshishuzu [1111] = &#123;...&#125;<br>int *woshizhizhen = woshishuzu;<br>// 那么woshizhizhen 这个指针存储的便是 woshishuzu 这个数组的第一个元素的地址.<br></code></pre></td></tr></table></figure><p>在 Java 中:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">double [1111] array = &#123;...&#125;;<br>System.our.println(array);<br>//你会发现打印出一串字符,如:[D@1ef234a5.前面的 <span class="hljs-string">&quot;[&quot;</span> 表示这是一个数组,D 表示这个数组是 double 类型的,@后面的1ef234a5就是地址值了.<br></code></pre></td></tr></table></figure><p>1ef234a5 不难看出采用的是十六进制,至于是不是数组第一个元素的地址我不知道.(后面学到了再补上吧)<br>如果你想要遍历数组元素的话,跟 C 一样定义一个 for 循环就行了.</p><p>学会上面的内容感觉就能开始刷题了,C 的指针和结构体在做题的时候确实没怎么用上,一般都直接定义一个或多个 “mark” 来代替指针,定义多个数组来代替结构体.<br>可能就是我纯菜,爱用点原始的.</p><p>下面是用 JAVA 和 C 写的猜数字游戏,可以看到大体上其实是相似的.<br>JAVA:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash">import java.util.Scanner;<br>import java.util.Random;<br>public class Main<br>&#123;<br>    public static void main(String[] args)<br>    &#123;<br>        Scanner <span class="hljs-keyword">in</span> = new Scanner(System.<span class="hljs-keyword">in</span>);<br>        Random rand = new Random();<br>        int s = rand.nextInt(101);<br>        int i = 0;<br>        System.out.println(<span class="hljs-string">&quot;请输入一个(0,100)之间的数:&quot;</span>);<br>        i = in.nextInt();<br>        int a = 0;<br>        int b = 100;<br>        <span class="hljs-keyword">while</span>(<span class="hljs-literal">true</span>)<br>        &#123;<br><br>            <span class="hljs-keyword">if</span>(i&lt;0||i&gt;100)<br>            &#123;<br>                System.out.println(<span class="hljs-string">&quot;你是来找茬的吧?&quot;</span>);<br>                <span class="hljs-built_in">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i &lt; s)<br>            &#123;<br>                a = i;<br>                System.out.println(<span class="hljs-string">&quot;请输入一个在(&quot;</span> + a + <span class="hljs-string">&quot;,&quot;</span> + b + <span class="hljs-string">&quot;)的数字:&quot;</span>);<br>                i = in.nextInt();<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(i &gt; s)<br>            &#123;<br>                b=i;<br>                System.out.println(<span class="hljs-string">&quot;请输入一个在(&quot;</span> + a + <span class="hljs-string">&quot;,&quot;</span> + b + <span class="hljs-string">&quot;)的数字:&quot;</span>);<br>                i = in.nextInt();<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                System.out.println(<span class="hljs-string">&quot;恭喜你猜对啦!&quot;</span>);<br>                <span class="hljs-built_in">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>习惯了 C 的代码结构,不打算改了.<br>C:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br><span class="hljs-comment">#include&lt;stdlib.h&gt;</span><br><span class="hljs-comment">#include&lt;time.h&gt;</span><br>int <span class="hljs-function"><span class="hljs-title">main</span></span>()<br>&#123;<br>    srand((unsigned int)time(NULL));<br>    int answer=(rand()%100)+1;<br>    int i;<br>    int a=1;<br>    int b=100;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[1，100]的数字：&quot;</span>);<br>    scanf(<span class="hljs-string">&quot;%d&quot;</span>,&amp;i);<br>    <span class="hljs-keyword">if</span>(i&lt;0||i&gt;100)<br>    &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;干嘛,还玩不玩了&quot;</span>);<br>    <span class="hljs-built_in">return</span> 0;<br>    &#125;<br>    <span class="hljs-keyword">while</span>(i!=answer)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(i&gt;answer)<br>        &#123;<br>            b=i;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[%d，%d]的数字：&quot;</span>,a,i);<br>            scanf(<span class="hljs-string">&quot;%d&quot;</span>,&amp;i);<br>            <span class="hljs-keyword">if</span>(i==answer)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恭喜你，猜中啦！&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            a=i;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;请输入一个在区间[%d，%d]的数字：&quot;</span>,i,b);<br>            scanf(<span class="hljs-string">&quot;%d&quot;</span>,&amp;i);<br>            <span class="hljs-keyword">if</span>(i==answer)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恭喜你，猜对啦!&quot;</span>);<br>            <br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>加油.</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>姚的第一篇文章</title>
    <link href="/2024/12/12/%E5%A7%9A%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <url>/2024/12/12/%E5%A7%9A%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>欢迎来到我的博客，这是我于2024.12.7晚上八点创建的第一篇文章，可恶的加速器误我两天，还是翻墙好啊．大家一起来翻墙吧！</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>羽毛球&amp;开始正式学习java</title>
    <link href="/2024/12/10/%E5%BC%80%E5%A7%8B%E6%AD%A3%E5%BC%8F%E5%AD%A6%E4%B9%A0java2024.12.12/"/>
    <url>/2024/12/10/%E5%BC%80%E5%A7%8B%E6%AD%A3%E5%BC%8F%E5%AD%A6%E4%B9%A0java2024.12.12/</url>
    
    <content type="html"><![CDATA[<p>大晚上没睡觉躺在床上翻老家的照片,突然有人给我发信息.,然后就跟她聊到了老家.<br>这是我自认为拍的比较好看的几张老家的照片,都是吃完晚饭去散步的时候拍的.</p><p><img src="/images/%E8%80%81%E5%AE%B6%E9%A3%8E%E6%99%AF1.jpg"><br><img src="/images/%E8%80%81%E5%AE%B6%E9%A3%8E%E6%99%AF2.jpg"><br><img src="/images/%E8%80%81%E5%AE%B6%E9%A3%8E%E6%99%AF3.jpg"></p><p>老家旁边的水坝蜿蜒很长,上面修了一条很宽敞的路,水坝东边是一片片农田,西边是一口湖,听说是鄱阳湖的分支.<br>那条路人很少,风景很好.又因为比两边高很多,所以总会有微风,找不到第二个比这条水坝之上的路更惬意的地方了.</p><p>早上8点的闹钟响了,想着没有非做不可的事儿于是接着睡了,8:50左右被室友叫醒去球馆打羽毛球.</p><p><img src="/images/%E7%BE%BD%E6%AF%9B%E7%90%831.jpg"></p><p>到了12:06打了个车回去了,路上司机指着下一单的接人地点问我知道这是哪儿不?<br>上面显示:The Hunan University of Technology (new…)<br>仔细一看这不就是学校吗?<br>司机又笑着说: 是两个黑人,接了好几次了.<br>吃了完午餐就回寝室睡觉了,因为下午还要去自习.<br>室友睡醒了,开始自言自语,虽然见怪不怪了但还是睡不着,看了看时间1:36,想了想直接去自习了.<br>下午目标很明确,有人跟我说过我的博客没有评论功能.</p><p><img src="/images/%E6%B2%A1%E8%AF%84%E8%AE%BA%E5%B7%AE%E8%AF%84.png"></p><p>搞了一下午尝试了各种评论插件,搞到了5:10还是没有成功,已经开始感觉到红温了.<br>加上今天下午,为了搞评论功能搞了8个小时,不打算搞了.<br>骑车去北苑点了一份干拌面,吃完回寝室洗了个澡就去自习了.</p><p>正在哔哩哔哩大学学Java的我突然被旁边的同学扯了一下,他指着他的屏幕.</p><p><img src="/images/%E9%83%A8%E7%BD%B2%E9%97%AE%E9%A2%98.png"></p><p>我笑了笑说拍个照(以为网上有人名字首字母跟我一样).<br>然后他说这是他的博客,我才知道是他打上去的,我很疑惑鸣谢我干啥.<br>一会儿后才知道是给他解释了一些搭建博客时遇到的问题.<br>明明是那么简单的几个操作,我花了几个晚上各个平台搜索信息,看视频,逐条评论搜索,去试错.<br>讲给别人也不过区区十分钟就讲完了.<br>这就是有人指导的重要性,完全就是事一功十.</p><p>今天也正式决定了跟着一位b站上的博主学习java.</p><p><a href="https://b23.tv/P6OHyvX">点击此处跳转教学</a></p><p>今天的进度:<a href="https://b23.tv/uVtIJFM">java基础概念-03-字面量</a></p><p>今天一点点不开心.</p>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
      <tag>运动</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>今天又开心又不开心.</title>
    <link href="/2024/12/09/%E8%80%B3%E6%9C%BA%E7%9A%84%E6%9C%89%E8%B6%A3%E7%9A%84%E4%BA%8B%E5%84%BF%202024.12.9/"/>
    <url>/2024/12/09/%E8%80%B3%E6%9C%BA%E7%9A%84%E6%9C%89%E8%B6%A3%E7%9A%84%E4%BA%8B%E5%84%BF%202024.12.9/</url>
    
    <content type="html"><![CDATA[<p>之前团支书号召大家报名下周一的升旗仪式,也就是今天.我心想既然迟早都要轮到我们,不如这次给他报了,然后我就给我和朋友报了.<br>昨天晚上弓箭洗还嘱咐我明天早上他起不来一定要给他叫醒,我欣然答应.<br>然后我订了个5:20的闹钟,感觉还是有点晚了,毕竟5.40之前就得赶到,于是大手一挥把闹钟定到了5:12,心想应该不会迟到了.<br>第二天4:45醒了一次,可能这就是高手对于即将到来的任务的预醒吧.(其实就是做了梦,忘记做了啥梦).<br>手机闹钟一响我马上起床了,第一件事是关掉闹钟,第二件事就是去216给朋友叫醒了,摇了好久才醒,他迷迷糊糊坐起来看着我.<br>回寝室穿好衣服洗漱完就出发了,到他寝室一看,他又睡了,听到我开门的声音他坐起来了,我说5:30了,马上迟到,就先走了.<br>然后走在路上.<br><img src="/images/12.jpg"><br>当时站在原地楞了一会儿,想着回寝室要给室友吵醒了,当即决定散散步.<br>没一会儿朋友也出发了,等我跟他汇合时.<br>他说:”我当时在想你5点钟叫我起来干嘛,我以为你是怕我待会起不来先叫一遍,然后我就想着再睡一会儿到6点起床,谁知道没过一会你又来了,还背着一个书包准备出发!”<br>给我俩都整笑了.</p><p>还有一个更离谱的事儿,自己给自己蠢笑了.<br>升旗的时候我问朋友: 你有耳机吗?<br>他说: 不是蓝牙就可以了吗.<br>我当时认真的以为待会听力考试是用刚从学校买的耳机听的,蓝牙耳机怎么能连上广播呢?<br>然后就先回了一趟寝室,把四六级耳机给拿上了,到了教室打书包里面拿出来给他摁上南孚,然后伸手指了指他耳朵上的蓝牙耳机.<br>“你这个能听吗?”<br>他说啥我忘记了,我把四六级听力耳机给放桌面上,看了一会儿听力原文,后面的同学突然给我发消息: 你咋把四六级耳机给带上了?<br>一阵交流,我明白事情的原委了,是我搞错了,这次考试单纯手机上写,也是手机连自己的耳机听听力!<br>然后前面的同学给我出了一个对策: 申请延考.<br>我鼓起勇气跟老师讲我的请求,老手一脸严肃.<br>一板一眼的说道: 你知道吗?你延考的话是全班人坐在这儿,我一个人监督你考试.<br>我低着头点了点头.<br>“刚刚不是问过了吗?没有耳机的去隔壁班看看.”<br>要怎么解释呢?我以为是用四六级耳机.<br>马上开始考试了,老师让我现在赶紧去别的班借.我慢跑路过两间教室,看见老师在讲台上滔滔不绝于是决定找下一个教室.</p><p>然后找到一个老师没在讲台上的教室.<br>“老师,我能找你们班借个耳机吗?待会要英语听力考试.”<br>“没有没有,在上课呢!”<br>不希望课堂被打扰的老师希望不速之客离开教室.<br>明知应该离开的我依然扫视一遍班级希望有人能伸出援手.<br>老师又催促一遍,这时候我犹豫的转身准备走了.<br>突然有个学姐喊住了我.<br>“诶,同学这个耳机可以吗?”<br>“谢谢”<br>正要接过耳机离开,她又开口:”A开头的!”<br>思考一会儿明白了她的意思,我点点头快步离开.<br>出于感恩,我塞了一张纸条给她,里面写了我的微信.<br><img src="/images/%E8%80%B3%E6%9C%BA%E5%AD%A6%E5%A7%90.jpg"></p><p>没报四六级的我只能把那个烂烂的耳机小心的收藏起来,期待以后它能派上用场.</p>]]></content>
    
    
    <categories>
      
      <category>日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>趣味</tag>
      
      <tag>暖心</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>姚大王的博客搭建日记.</title>
    <link href="/2024/12/07/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/12/07/%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>利用<a href="https://hexo.io/">Hexo</a>&amp;<a href="https://github.com/">GitHub</a>搭建自己的博客<br><a href="https://b23.tv/Ta1Jf7Q">点击此处跳转教程</a><br>遇到的问题以及搜索到的答案的话,在hexo d部署博客这一步之前按照视频操作应该是没有问题的.在hexo d这一步我卡了两天,查了好多资料问了好多人.<br>错误如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">Error: Spawn failed<br>    at ChildProcess.&lt;anonymous&gt;  (D:\StudyMaterials\8_FileManagement\testBlog\blog\node_modules\hexo-util\lib\spawn.js:51:21)<br>    at ChildProcess.emit (events.js:314:20)<br>    at ChildProcess.cp.emit  (D:\StudyMaterials\8_FileManagement\testBlog\blog\node_modules\cross-spawn\lib\enoent.js:34:29)<br>    at Process.ChildProcess._handle.onexit (internal/child_process.js:275:12)<br></code></pre></td></tr></table></figure><p>可把我气死了,深深的无力感.<br>得到的一些帮助如下:</p><p><img src="/images/7.jpg"><br><img src="/images/6.jpg"><br><img src="/images/5.jpg"><br><img src="/images/4.jpg"><br><img src="/images/8.jpg"></p><p>结果在和一位ios组学长的交流中在关掉加速器之后突然部署成功了!</p><p><img src="/images/2.jpg"><br><img src="/images/3.jpg"></p><p>好景不长,在尝试更改博客标题后再次部署就找不到我的博客了.多次尝试之后直接原地红温</p><p><img src="/images/9.jpg"></p><p>然后开始怀疑是不是加速器的问题,然后开始查询有关于我正在用的加速器的资料,真让我给找着了.</p><p><img src="/images/10.jpg"><br><img src="/images/11.jpg"></p><p>然后开始断掉加速器尝试hexo d,有时候成功,有时候失败.不禁想到有人评论跟网速有关.<br>然后叫同学教我搭梯子翻墙.当天晚上就成功了,我开始把一切的原因归结于加速器.<br>知道我又一次报错,我不得不再次踏上寻找答案的路.<br>最终,在一个偏僻的角落的文章的评论区,看到了一个网友的评论说:</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">打开<span class="hljs-built_in">config</span>.yml配置文件,修改repo: https://github.com/yourname/yourname.github.<span class="hljs-built_in">io</span>.git为repo: git@github.com:yourname/yourname.github.<span class="hljs-built_in">io</span>.git<br></code></pre></td></tr></table></figure><p>抱着试一试的心态按照他的方法试了一遍,结果成功了,每一次hexo d都会成功,无论你是否开加速器亦或者是挂梯子都百分百成功.<br>至此,姚大王的博客就彻底搭建成功了!</p>]]></content>
    
    
    <categories>
      
      <category>日记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
